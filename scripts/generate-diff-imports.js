const fs = require('fs');
const path = require('path');

const componentsDir = path.join(__dirname, '../packages/shineout/src');
const outputPath = path.join(__dirname, '../docs/pages/diff/diff-imports.ts');

function scanDiffReports() {
  const imports = [];
  const exports = [];
  
  // 扫描所有组件目录
  const components = fs.readdirSync(componentsDir);
  
  components.forEach(component => {
    const componentPath = path.join(componentsDir, component);
    const diffPath = path.join(componentPath, '__diff__');
    
    // 检查是否存在 __diff__ 目录
    if (fs.existsSync(diffPath) && fs.statSync(diffPath).isDirectory()) {
      const versions = fs.readdirSync(diffPath);
      
      versions.forEach(version => {
        const versionPath = path.join(diffPath, version);
        const indexPath = path.join(versionPath, 'index.md');
        
        // 检查是否存在 index.md 文件
        if (fs.existsSync(indexPath) && fs.statSync(indexPath).isFile()) {
          // 将组件名和版本中的短横线替换为下划线
          const safeComponent = component.replace(/-/g, '_');
          const safeVersion = version.replace(/\./g, '_').replace(/-/g, '_');
          const key = `${safeComponent}_${safeVersion}`;
          imports.push(`import ${key} from '!!raw-loader!../../../packages/shineout/src/${component}/__diff__/${version}/index.md';`);
          exports.push(`  '${component}/${version}': ${key}`);
        }
      });
    }
  });
  
  // 生成文件内容
  const content = `// This file is auto-generated by scripts/generate-diff-imports.js
// DO NOT EDIT MANUALLY

${imports.join('\n')}

export const diffReports: Record<string, string> = {
${exports.join(',\n')}
};

export const diffReportsList = [
${exports.map(exp => {
  const match = exp.match(/'([^/]+)\/([^']+)':/);
  if (match) {
    return `  { component: '${match[1]}', version: '${match[2]}' }`;
  }
  return '';
}).filter(Boolean).join(',\n')}
];
`;
  
  // 保存文件
  fs.writeFileSync(outputPath, content);
  
  console.log(`生成完成！共找到 ${imports.length} 个 diff 报告`);
  console.log(`文件已保存到: ${outputPath}`);
}

scanDiffReports();