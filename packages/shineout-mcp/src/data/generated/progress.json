{
  "name": "Progress",
  "description": "用户进行操作后，系统对该操作行为内容作出的反馈",
  "category": "feedback",
  "importPath": "import { Progress } from 'shineout'",
  "props": [
    {
      "name": "className",
      "type": "string",
      "required": false,
      "description": "自定义类名"
    },
    {
      "name": "style",
      "type": "CSSProperties",
      "required": false,
      "description": "最外层扩展样式"
    },
    {
      "name": "background",
      "type": "string",
      "required": false,
      "defaultValue": "\\\"#e9ecef\\\"",
      "description": "背景色"
    },
    {
      "name": "children",
      "type": "ReactNode",
      "required": false,
      "description": "附加内容"
    },
    {
      "name": "color",
      "type": "string | { form?: string , to?: string }",
      "required": false,
      "defaultValue": "primary",
      "description": "前景色, 可以设置为对象变成渐变."
    },
    {
      "name": "shape",
      "type": "\"line\" | \"circle\" | \"line-pop\" | \"line-inner\"",
      "required": false,
      "defaultValue": "\\\"line\\\"",
      "description": "样式"
    },
    {
      "name": "size",
      "type": "number",
      "required": false,
      "defaultValue": "100",
      "description": "进度条大小，仅对 circle 有效"
    },
    {
      "name": "strokeWidth",
      "type": "number",
      "required": false,
      "defaultValue": "8",
      "description": "线框宽度"
    },
    {
      "name": "type",
      "type": "\"success\" | \"info\" | \"warning\" | \"danger\"",
      "required": false,
      "description": "内置配色"
    },
    {
      "name": "value",
      "type": "number",
      "required": false,
      "defaultValue": "0",
      "description": "百分比值，0 <= value <= 100"
    },
    {
      "name": "strokeLinecap",
      "type": "\"butt\" | \"round\" | \"square\" | \"inherit\"",
      "required": false,
      "description": "进度条两端的描边形状"
    },
    {
      "name": "icon",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "是否显示图标"
    },
    {
      "name": "iconSize",
      "type": "number",
      "required": false,
      "description": "图标大小"
    }
  ],
  "examples": [
    {
      "name": "01-base",
      "title": "cn - 基本用法",
      "code": "/**\n * cn - 基本用法\n *    --  最基本的用法\n * en - Basic\n *    --  Basic Usage\n */\nimport React from 'react';\nimport { Progress } from 'shineout';\n\nexport default () => {\n  return <Progress style={{ width: 400 }} value={75} />;\n};\n",
      "language": "tsx"
    },
    {
      "name": "02-line-pop",
      "title": "cn - 弹出展示",
      "code": "/**\n * cn - 弹出展示\n *    --  设置 shape=\"line-pop\"，children 会通过弹出框展示\n * en - Basic\n *    --  set shape=\"line-pop\"，children will show in a popup\n */\n\nimport React, { useState } from 'react';\nimport { Progress, Button } from 'shineout';\n\nlet store = 0;\n\nconst App: React.FC = () => {\n  const [value, setValue] = useState(0);\n\n  const handleClick = (num = store) => {\n    let v = num;\n    v += Math.random() * 12;\n    if (v >= 100) {\n      v = 100;\n      setValue(v);\n    } else {\n      store = v;\n      if (store > 100) {\n        setValue(100);\n        store = 0;\n      } else {\n        setValue(v);\n        setTimeout(handleClick, 320);\n      }\n    }\n  };\n\n  return (\n    <div style={{ width: 400 }}>\n      <Progress value={value} shape='line-pop'>{`${parseInt(value.toString(), 10)}%`}</Progress>\n\n      <Button mode=\"outline\" onClick={() => handleClick(0)} style={{ marginTop: 24 }}>Start</Button>\n    </div>\n  );\n};\n\nexport default App;\n",
      "language": "tsx"
    },
    {
      "name": "03-type",
      "title": "cn - 进度条状态",
      "code": "/**\n * cn - 进度条状态\n *    -- 内置了四种样式，通过 type 来调用\n * en - Type\n *    -- There are 4 built-in style\n */\nimport React from 'react';\nimport { Progress } from 'shineout';\n\nconst App: React.FC = () => (\n  <div style={{ width: 400, display: 'flex', flexDirection: \"column\", gap: 24 }}>\n    <Progress value={100} type='success'>100%</Progress>\n    <Progress value={90} type='info'>90%</Progress>\n    <Progress value={80} type='warning'>80%</Progress>\n    <Progress value={70} type='danger'>70%</Progress>\n  </div>\n);\n\nexport default App;\n",
      "language": "tsx"
    },
    {
      "name": "04-circle",
      "title": "cn - 环形进度条",
      "code": "/**\n * cn - 环形进度条\n *    -- 设置 shape 为 'circle' 展示环形进度条\n * en - Circle\n *    -- set shape to 'circle' to show circle progress\n */\nimport React from 'react';\nimport { Progress } from 'shineout';\n\nconst App: React.FC = () => (\n  <div style={{ display: 'flex', gap: '32px' }}>\n    <Progress value={0} shape='circle' type='info' size={64} strokeWidth={4}>0%</Progress>\n    <Progress value={60} shape='circle' type='info' size={64} strokeWidth={4}>60%</Progress>\n    <Progress value={70} shape='circle' type='warning' size={64} strokeWidth={4} icon />\n    <Progress value={100} shape='circle' type='success' size={64} strokeWidth={4} icon />\n    <Progress value={90} shape='circle' type='danger' size={64} strokeWidth={4} icon />\n  </div>\n);\n\nexport default App;\n",
      "language": "tsx"
    },
    {
      "name": "05-line-inner",
      "title": "cn - 内嵌进度条",
      "code": "/**\n * cn - 内嵌进度条\n *    -- 设置 shape 为 'line-inner' 展示内嵌的进度条\n * en - Line inner\n *    -- set shape to 'line-inner' to show line inner progress\n */\nimport React from 'react';\nimport { Progress } from 'shineout';\n\nconst App: React.FC = () => (\n  <div style={{ display: 'flex', flexDirection: 'column', gap: 24, width: 400 }}>\n    <Progress value={0} shape='line-inner' type='info'>\n      0%\n    </Progress>\n    <Progress value={5} shape='line-inner' type='info'>\n      5%\n    </Progress>\n    <Progress value={40} shape='line-inner' type='info'>\n      10%\n    </Progress>\n    <Progress value={50} shape='line-inner' type='warning'>\n      50%\n    </Progress>\n    <Progress value={100} shape='line-inner' type='success'>\n      100%\n    </Progress>\n    <Progress value={60} shape='line-inner' type='danger'>\n      60%\n    </Progress>\n  </div>\n);\n\nexport default App;\n",
      "language": "tsx"
    }
  ],
  "subComponents": [],
  "version": "3.7.7",
  "apiSummary": {
    "totalProps": 13,
    "requiredProps": 0,
    "propsWithWhen": 0
  }
}