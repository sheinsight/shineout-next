{
  "name": "Tabs",
  "description": "用来分隔内容上有关联但属于不同类别的数据集合，具有全局导航的作用",
  "category": "other",
  "importPath": "import { Tabs } from 'shineout'",
  "props": [
    {
      "name": "className",
      "type": "string",
      "required": false,
      "description": "自定义类名"
    },
    {
      "name": "style",
      "type": "CSSProperties",
      "required": false,
      "description": "自定义样式"
    },
    {
      "name": "lazy",
      "type": "boolean",
      "required": false,
      "defaultValue": "true",
      "description": "是否开启懒加载"
    },
    {
      "name": "shape",
      "type": "\"button\" | \"line\" | \"bordered\" | \"card\" | \"dash\" | \"fill\"",
      "required": false,
      "defaultValue": "\\\"card\\\"",
      "description": "Shape 不为空时，activeBackground 等颜色参数将会无效，当shape为bordered时，指向card"
    },
    {
      "name": "children",
      "type": "ReactNode",
      "required": false,
      "description": "子元素,必须为 Panel 元素"
    },
    {
      "name": "extra",
      "type": "ReactNode",
      "required": false,
      "description": "额外内容"
    },
    {
      "name": "splitColor",
      "type": "string",
      "required": false,
      "description": "分割线颜色,替代原有border属性"
    },
    {
      "name": "hideSplit",
      "type": "boolean",
      "required": false,
      "description": "是否隐藏分割线"
    },
    {
      "name": "collapsible",
      "type": "boolean",
      "required": false,
      "description": "是否可折叠"
    },
    {
      "name": "defaultCollapsed",
      "type": "boolean",
      "required": false,
      "description": "默认折叠状态,当 collapsible 设置为 true 时生效"
    },
    {
      "name": "autoFill",
      "type": "boolean",
      "required": false,
      "description": "自动填充内容区域,当position为left-top, right-top且shape为非button和fill时默认开启，其他情况需手动控制"
    },
    {
      "name": "switchToTop",
      "type": "boolean",
      "required": false,
      "description": "切换 tab 将自动滚动到 Tabs"
    },
    {
      "name": "sticky",
      "type": "number | boolean | StickyProps",
      "required": false,
      "description": "开启头部附着"
    },
    {
      "name": "position",
      "type": "| \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\" | \"left-top\" | \"left-bottom\" | \"right-top\" | \"right-bottom\"",
      "required": false,
      "description": "选项卡位置"
    },
    {
      "name": "activeBackground",
      "type": "string",
      "required": false,
      "description": "选中标签背景色"
    },
    {
      "name": "inactiveBackground",
      "type": "string",
      "required": false,
      "description": "未选中标签背景色"
    },
    {
      "name": "tabBarStyle",
      "type": "CSSProperties",
      "required": false,
      "description": "tab bar 的样式对象"
    },
    {
      "name": "onChange",
      "type": "((key: string | number) => void)",
      "required": false,
      "description": "标签选中时触发回调事件"
    },
    {
      "name": "color",
      "type": "string",
      "required": false,
      "description": "标签页文字颜色，仅当 shape 为 \\\"card\\\" 时生效"
    },
    {
      "name": "allowNonPanel",
      "type": "boolean",
      "required": false,
      "description": "允许非Tabs.Panel的子元素",
      "version": "3.5.3"
    },
    {
      "name": "renderTabsHeader",
      "type": "((header: ReactNode, props: Omit<TabsProps, \"renderTabsHeader\">) => ReactNode)",
      "required": false,
      "description": "自定义渲染 header 内容",
      "version": "3.7.0"
    },
    {
      "name": "active",
      "type": "string | number",
      "required": false,
      "description": "当前选中标签页（受控）"
    },
    {
      "name": "defaultActive",
      "type": "string | number",
      "required": false,
      "defaultValue": "0",
      "description": "默认选中标签页（非受控）"
    }
  ],
  "examples": [
    {
      "name": "01-base",
      "title": "cn - 基本用法",
      "code": "/**\n * cn - 基本用法\n *    -- 选项卡的基本用法\n * en - Basic\n *    -- Basic usage of Tabs\n */\nimport { Tabs } from 'shineout';\n\nexport default () => {\n  const tabs = [];\n  for (let i = 0; i < 3; i++) {\n    tabs.push({ title: `Tab ${i + 1}`, content: `Content of Tab ${i + 1}` });\n  }\n  return (\n    <div style={{ height: 100 }}>\n      <Tabs shape='line' defaultActive={0}>\n        {tabs.map((tab, index) => {\n          return (\n            <Tabs.Panel key={index} tab={tab.title}>\n              <div style={{ padding: 16, height: '100%', fontSize: 14 }}>{tab.content}</div>\n            </Tabs.Panel>\n          );\n        })}\n      </Tabs>\n    </div>\n  );\n};\n",
      "language": "tsx"
    },
    {
      "name": "02-01-line-shape",
      "title": "cn - 不同样式",
      "code": "/**\n * cn - 不同样式\n *    -- 选项卡有五种样式，可通过 `shape` 属性设置，card 卡片，line 线条，button 按钮, fill 填充, dash 短线\n *    -- 设置 `shape = \"line\"` 标签页显示为线条\n * en - Shape\n *    -- There are three shapes for tabs, you can set the `shape` property to change it\n *    -- Set `shape = \"line\"` to show tabs as line\n */\nimport { Tabs } from 'shineout';\n\nexport default () => {\n  const tabs: any[] = [];\n  for (let i = 0; i < 3; i++) {\n    tabs.push({ title: `Tab ${i + 1}`, content: `Content of Tab ${i + 1}` });\n  }\n\n  return (\n    <div style={{ height: 100 }}>\n      <Tabs shape={'line'} defaultActive={0}>\n        {tabs.map((tab, index) => {\n          return (\n            <Tabs.Panel key={index} tab={tab.title}>\n              <div style={{ padding: 16, height: '100%', fontSize: 14 }}>{tab.content}</div>\n            </Tabs.Panel>\n          );\n        })}\n      </Tabs>\n    </div>\n  );\n};\n",
      "language": "tsx"
    },
    {
      "name": "02-02-button-shape",
      "title": "cn - ",
      "code": "/**\n * cn - \n *    -- 设置 `shape = \"button\"` 标签页显示为按钮\n * en - \n *    -- Set `shape = \"button\"` to show tabs as buttons\n */\nimport { Tabs } from 'shineout';\n\nexport default () => {\n  const tabs: any[] = [];\n  for (let i = 0; i < 3; i++) {\n    tabs.push({ title: `Tab ${i + 1}`, content: `Content of Tab ${i + 1}` });\n  }\n\n  return (\n    <div style={{ height: 100 }}>\n      <Tabs shape={'button'} defaultActive={0}>\n        {tabs.map((tab, index) => {\n          return (\n            <Tabs.Panel key={index} tab={tab.title}>\n              <div style={{ padding: 16, height: '100%', fontSize: 14 }}>{tab.content}</div>\n            </Tabs.Panel>\n          );\n        })}\n      </Tabs>\n    </div>\n  );\n};\n",
      "language": "tsx"
    },
    {
      "name": "02-03-card-shape",
      "title": "cn - ",
      "code": "/**\n * cn - \n *    -- 设置 `shape = \"card\"` 标签页显示为卡片式\n * en - \n *    -- Set `shape = \"card\"` to show tabs as card\n */\nimport { Tabs } from 'shineout';\n\nexport default () => {\n  const tabs: any[] = [];\n  for (let i = 0; i < 3; i++) {\n    tabs.push({ title: `Tab ${i + 1}`, content: `Content of Tab ${i + 1}` });\n  }\n\n  return (\n    <div style={{ height: 100 }}>\n      <Tabs shape={'card'} defaultActive={0}>\n        {tabs.map((tab, index) => {\n          return (\n            <Tabs.Panel key={index} tab={tab.title}>\n              <div style={{ padding: 16, height: '100%', fontSize: 14 }}>{tab.content}</div>\n            </Tabs.Panel>\n          );\n        })}\n      </Tabs>\n    </div>\n  );\n};\n",
      "language": "tsx"
    },
    {
      "name": "02-04-fill-shape",
      "title": "cn - ",
      "code": "/**\n * cn - \n *    -- 设置 `shape = \"fill\"` 标签页显示为填充\n * en - \n *    -- Set `shape = \"fill\"` to show tabs as fill\n */\nimport { Tabs } from 'shineout';\n\nexport default () => {\n  const tabs: any[] = [];\n  for (let i = 0; i < 3; i++) {\n    tabs.push({ title: `Tab ${i + 1}`, content: `Content of Tab ${i + 1}` });\n  }\n\n  return (\n    <div style={{ height: 100 }}>\n      <Tabs shape={'fill'} defaultActive={0}>\n        {tabs.map((tab, index) => {\n          return (\n            <Tabs.Panel key={index} tab={tab.title}>\n              <div style={{ padding: 16, height: '100%', fontSize: 14 }}>{tab.content}</div>\n            </Tabs.Panel>\n          );\n        })}\n      </Tabs>\n    </div>\n  );\n};\n",
      "language": "tsx"
    }
  ],
  "subComponents": [],
  "version": "3.7.7",
  "apiSummary": {
    "totalProps": 23,
    "requiredProps": 0,
    "propsWithWhen": 0
  },
  "subComponentApis": {}
}