{
  "name": "Button",
  "description": "使用按钮触发操作和链接",
  "category": "general",
  "importPath": "import { Button } from 'shineout'",
  "props": [
    {
      "name": "style",
      "type": "CSSProperties",
      "required": false,
      "description": "自定义样式"
    },
    {
      "name": "className",
      "type": "string",
      "required": false,
      "description": "自定义类名"
    },
    {
      "name": "onClick",
      "type": "MouseEventHandler<Element>",
      "required": false,
      "description": "按钮点击回调"
    },
    {
      "name": "disabled",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "禁用"
    },
    {
      "name": "children",
      "type": "ReactNode",
      "required": false,
      "description": "按钮里面的内容, 可以是文字图标等"
    },
    {
      "name": "renderLoading",
      "type": "((buttonEl: ReactNode) => ReactElement)",
      "required": false,
      "description": "自定义loading"
    },
    {
      "name": "loading",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "loading 状态"
    },
    {
      "name": "mode",
      "type": "\"text\" | \"outline\" | \"dashed\"",
      "required": false,
      "description": "按钮风格"
    },
    {
      "name": "type",
      "type": "| \"default\" | \"primary\" | \"secondary\" | \"danger\" | \"warning\" | \"success\" | \"link\"",
      "required": false,
      "defaultValue": "\\\"default\\\"",
      "description": "按钮类型"
    },
    {
      "name": "size",
      "type": "\"default\" | \"small\" | \"large\"",
      "required": false,
      "defaultValue": "\\\"default\\\"",
      "description": "按钮尺寸"
    },
    {
      "name": "space",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "仅有2个汉字的按钮，是否在2个汉字中间插入空格"
    },
    {
      "name": "href",
      "type": "string",
      "required": false,
      "description": "如果设置了 href 属性，将会用 <a> 代替 <button>"
    },
    {
      "name": "target",
      "type": "string",
      "required": false,
      "description": "当设置了 href 属性时，target 会被设置到 <a> 元素上"
    },
    {
      "name": "shape",
      "type": "\"circle\" | \"round\" | \"square\"",
      "required": false,
      "defaultValue": "\\\"default\\\"",
      "description": "设置按钮形状"
    },
    {
      "name": "htmlType",
      "type": "\"button\" | \"submit\" | \"reset\"",
      "required": false,
      "defaultValue": "\\\"button\\\"",
      "description": "按钮原生type属性"
    }
  ],
  "examples": [
    {
      "name": "s-001-base",
      "title": "cn - 基本用法",
      "code": "/**\n * cn - 基本用法\n *    -- 按钮分为主要按钮、次要按钮、线框按钮、虚框按钮、文字按钮五种，主按钮在同一个操作区域最多出现一次\n * en - Base\n *    -- Button is divided into five types: primary, secondary, outline, dash, and text. The primary button can only appear once in the same operation area\n */\n\nimport { Button } from 'shineout';\nexport default () => {\n  const buttonStyle = {\n    margin: 0,\n  };\n\n  return (\n    <div style={{ display: 'flex', gap: 24, flexWrap: 'wrap' }}>\n      <Button type='primary' style={buttonStyle}>\n        Primary\n      </Button>\n\n      <Button type='secondary' style={buttonStyle}>\n        Secondary\n      </Button>\n\n      <Button type='secondary' mode='outline' style={buttonStyle}>\n        Outline\n      </Button>\n\n      <Button type='secondary' mode='dashed' style={buttonStyle}>\n        Dashed\n      </Button>\n\n      <Button type='primary' mode='text' style={buttonStyle}>\n        Text\n      </Button>\n    </div>\n  );\n};\n",
      "language": "tsx"
    },
    {
      "name": "s-002-icon",
      "title": "cn - 图标按钮",
      "code": "/**\n * cn - 图标按钮\n *    -- Button 可以嵌入图标\n * en - Button with icon\n *    -- Button can embed icons\n */\n\nimport { Button } from 'shineout';\nimport { Icon01 } from './static/icon';\n\nexport default () => {\n  const buttonStyle = {\n    margin: 0,\n  };\n\n  return (\n    <div style={{ display: 'flex', gap: 24, flexWrap: 'wrap' }}>\n      <Button type='primary' style={buttonStyle}>\n        <Icon01 style={{ marginInlineEnd: 4 }}></Icon01>\n        Primary\n      </Button>\n      <Button type='primary' style={buttonStyle}>\n        Primary\n        <Icon01 style={{ marginInlineStart: 4 }}></Icon01>\n      </Button>\n      <Button type='primary' shape='square' style={buttonStyle}>\n        <Icon01></Icon01>\n      </Button>\n    </div>\n  );\n};\n",
      "language": "tsx"
    },
    {
      "name": "s-003-shape",
      "title": "cn - 按钮形状",
      "code": "/**\n * cn - 按钮形状\n *    -- 按钮分为矩形、全圆角、方形、圆形四种\n * en - Button shape\n *    -- Button is divided into square, circle, round, and rectangle\n */\n\nimport { Button } from 'shineout';\nimport { Icon01 } from './static/icon';\n\nexport default () => {\n  const buttonStyle = {\n    margin: 0,\n  };\n\n  const iconWarpperStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 4,\n  };\n\n  return (\n    <div style={{ display: 'flex', gap: 24, flexWrap: 'wrap' }}>\n      <Button type='primary' style={buttonStyle}>\n        Primary\n      </Button>\n      <Button type='primary' shape='round' style={buttonStyle}>\n        Primary\n      </Button>\n      <Button type='primary' shape='square' style={buttonStyle}>\n        <span style={iconWarpperStyle}>\n          <Icon01></Icon01>\n        </span>\n      </Button>\n      <Button type='primary' shape='circle' style={buttonStyle}>\n        <span style={iconWarpperStyle}>\n          <Icon01></Icon01>\n        </span>\n      </Button>\n    </div>\n  );\n};\n",
      "language": "tsx"
    },
    {
      "name": "s-004-size",
      "title": "cn - 按钮尺寸",
      "code": "/**\n * cn - 按钮尺寸\n *    -- 按钮分为小、中、大三种尺寸，推荐及默认为尺寸「中」，可在不同场景及不同业务需求选择适合尺寸\n * en - Button size\n *    -- Button is divided into small, medium, and large. The recommended and default size is medium. You can choose the appropriate size in different scenarios and different business needs\n */\n\nimport { Button } from 'shineout';\nexport default () => {\n  const buttonStyle = {\n    margin: 0,\n  };\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'center', gap: 24, flexWrap: 'wrap' }}>\n      <Button type='primary' size='small' style={buttonStyle}>\n        Primary\n      </Button>\n      <Button type='primary' style={buttonStyle}>\n        Primary\n      </Button>\n      <Button type='primary' size='large' style={buttonStyle}>\n        Primary\n      </Button>\n    </div>\n  );\n};\n",
      "language": "tsx"
    },
    {
      "name": "s-005-status",
      "title": "cn - 按钮状态",
      "code": "/**\n * cn - 按钮状态\n *    -- 按钮状态分为危险、警告、成功三种，可以与按钮类型同时生效，优先级高于按钮类型\n * en - Button status\n *    -- Button status is divided into danger, warning, and success. It can take effect at the same time as the button type, and the priority is higher than the button type\n */\n\nimport { Button } from 'shineout';\n\nconst buttonStyle = {\n  margin: 0,\n  width: 72,\n} as React.CSSProperties;\n\nconst wrapperStyle = {\n  gap: 24,\n  display: 'flex',\n  flexWrap: 'wrap',\n  flexDirection: 'column',\n} as React.CSSProperties;\n\nconst buttonWrapperStyle = {\n  gap: 24,\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n} as React.CSSProperties;\nexport default () => {\n  return (\n    <div style={wrapperStyle}>\n      <div style={buttonWrapperStyle}>\n        <Button type='default' style={buttonStyle}>\n          Default\n        </Button>\n        <Button type='default' mode='outline' style={buttonStyle}>\n          Default\n        </Button>\n        <Button type='default' mode='dashed' style={buttonStyle}>\n          Default\n        </Button>\n        <Button type='default' mode='text' style={buttonStyle}>\n          Default\n        </Button>\n      </div>\n      <div style={buttonWrapperStyle}>\n        <Button type='primary' style={buttonStyle}>\n          Primary\n        </Button>\n        <Button type='primary' mode='outline' style={buttonStyle}>\n          Primary\n        </Button>\n        <Button type='primary' mode='dashed' style={buttonStyle}>\n          Primary\n        </Button>\n        <Button type='primary' mode='text' style={buttonStyle}>\n          Primary\n        </Button>\n      </div>\n      <div style={buttonWrapperStyle}>\n        <Button type='danger' style={buttonStyle}>\n          Danger\n        </Button>\n        <Button type='danger' mode='outline' style={buttonStyle}>\n          Danger\n        </Button>\n        <Button type='danger' mode='dashed' style={buttonStyle}>\n          Danger\n        </Button>\n        <Button type='danger' mode='text' style={buttonStyle}>\n          Danger\n        </Button>\n      </div>\n      <div style={buttonWrapperStyle}>\n        <Button type='warning' style={buttonStyle}>\n          Warning\n        </Button>\n        <Button type='warning' mode='outline' style={buttonStyle}>\n          Warning\n        </Button>\n        <Button type='warning' mode='dashed' style={buttonStyle}>\n          Warning\n        </Button>\n        <Button type='warning' mode='text' style={buttonStyle}>\n          Warning\n        </Button>\n      </div>\n      <div style={buttonWrapperStyle}>\n        <Button type='success' style={buttonStyle}>\n          Success\n        </Button>\n        <Button type='success' mode='outline' style={buttonStyle}>\n          Success\n        </Button>\n        <Button type='success' mode='dashed' style={buttonStyle}>\n          Success\n        </Button>\n        <Button type='success' mode='text' style={buttonStyle}>\n          Success\n        </Button>\n      </div>\n    </div>\n  );\n};\n",
      "language": "tsx"
    }
  ],
  "subComponents": [
    "Group"
  ],
  "version": "3.7.7",
  "apiSummary": {
    "totalProps": 15,
    "requiredProps": 0,
    "propsWithWhen": 0
  },
  "subComponentApis": {
    "Group": {
      "props": [
        {
          "name": "style",
          "type": "CSSProperties",
          "required": false,
          "description": "自定义样式"
        },
        {
          "name": "className",
          "type": "string",
          "required": false,
          "description": "自定义类名"
        },
        {
          "name": "size",
          "type": "\"small\" | \"large\" | \"default\"",
          "required": false,
          "defaultValue": "\\\"default\\\"",
          "description": "不同尺寸"
        },
        {
          "name": "shape",
          "type": "\"round\"",
          "required": false,
          "description": "设置按钮形状"
        },
        {
          "name": "mode",
          "type": "\"text\" | \"outline\" | \"dashed\"",
          "required": false,
          "description": "按钮风格;如果Button和Group同时设置mode,以Group为准"
        },
        {
          "name": "type",
          "type": "| \"default\" | \"primary\" | \"secondary\" | \"danger\" | \"warning\" | \"success\" | \"link\"",
          "required": false,
          "defaultValue": "\\\"default\\\"",
          "description": "按钮类型;如果Button和Group同时设置type,以Button为准"
        },
        {
          "name": "children",
          "type": "ReactNode",
          "required": true,
          "defaultValue": "index",
          "description": "由 Button 组成的 array"
        },
        {
          "name": "id",
          "type": "string",
          "required": false,
          "description": "按钮组id"
        }
      ]
    }
  }
}