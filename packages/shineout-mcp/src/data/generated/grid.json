{
  "name": "Grid",
  "description": "动态栅格体系，用于某些不适合使用 flex 的地方",
  "category": "layout",
  "importPath": "import { Grid } from 'shineout'",
  "props": [
    {
      "name": "className",
      "type": "string",
      "required": false,
      "description": "自定义类名"
    },
    {
      "name": "style",
      "type": "CSSProperties",
      "required": false,
      "description": "自定义样式"
    },
    {
      "name": "gutter",
      "type": "number",
      "required": false,
      "description": "栅格之间间距"
    },
    {
      "name": "offset",
      "type": "number",
      "required": false,
      "defaultValue": "0",
      "description": "左偏移百分比，0 <= offset < 1"
    },
    {
      "name": "width",
      "type": "number",
      "required": false,
      "defaultValue": "1",
      "description": "宽度百分比，0 < number <= 1"
    },
    {
      "name": "responsive",
      "type": "\"sm\" | \"md\" | \"lg\" | \"xl\"",
      "required": false,
      "defaultValue": "\\\"md\\\"",
      "description": "激活响应式的最小尺寸。sm: 568px; md: 768px; lg: 992px; xl: 1200px;\\n例如：设置为 sm 时，屏幕尺寸若低于568px，栅格系统的响应性将不会生效。"
    },
    {
      "name": "stretch",
      "type": "boolean",
      "required": false,
      "description": "是否撑满容器高度"
    },
    {
      "name": "children",
      "type": "ReactNode",
      "required": false,
      "description": "子元素"
    }
  ],
  "examples": [
    {
      "title": "Arbitrary",
      "description": "Grid system is dynamic generated and can be any number",
      "code": "/**\n * cn - 任意等分\n *    -- Grid 的栅格体系是动态生成，可以实现任意等份\n * en - Arbitrary\n *    -- Grid system is dynamic generated and can be any number\n */\nimport React, { useState } from 'react';\nimport { Grid, Slider, TYPE } from 'shineout';\n\ntype SliderProps = TYPE.Slider.Props<number>;\ntype SliderOnChange = SliderProps['onChange'];\n\nconst gridStyle: React.CSSProperties = {\n  color: '#fff',\n  paddingInlineStart: 8,\n  background: '#197afa',\n  fontSize: 14,\n};\nconst style: React.CSSProperties = { background: '#e8ebf0', marginBottom: 4, lineHeight: '30px' };\n\nconst App: React.FC = () => {\n  const [count, setCount] = useState(5);\n\n  const handleCountChange: SliderOnChange = (v) => {\n    setCount(v);\n  };\n  return (\n    <div>\n      <Slider\n        step={0}\n        value={count}\n        formatValue={false}\n        onChange={handleCountChange}\n        scale={[1, 2, 3, 5, 8, 13, 21, 34, 55]}\n      />\n\n      <div style={{ height: 20 }} />\n\n      {Array.from({ length: count }).map((_n, i) => (\n        <div key={i} style={style}>\n          <Grid width={(i + 1) / count} style={gridStyle}>\n            {`${i + 1}/${count}`}\n          </Grid>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n"
    },
    {
      "title": "Offset",
      "description": "The offset property set the offset in the same way as the width",
      "code": "/**\n * cn - 偏移\n *    -- offset 属性可以设置偏移，取值方式和宽度相同\n * en - Offset\n *    -- The offset property set the offset in the same way as the width\n */\nimport React from 'react';\nimport { Grid } from 'shineout';\n\nconst style: React.CSSProperties = {\n  background: '#e8ebf0',\n};\nconst gridStyle: React.CSSProperties = {\n  color: '#fff',\n  lineHeight: '60px',\n  textAlign: 'center',\n  background: '#197afa',\n  fontSize: 14,\n};\n\nconst App: React.FC = () => (\n  <div style={style}>\n    <Grid width={1 / 3} offset={1 / 3} style={gridStyle}>\n      With 1/3, Offset 1/3\n    </Grid>\n  </div>\n);\n\nexport default App;\n"
    },
    {
      "title": "Nested",
      "description": "Nested grids",
      "code": "/**\n * cn - 嵌套\n *    -- 嵌套的栅格\n * en - Nested\n *    -- Nested grids\n */\nimport React from 'react';\nimport { Grid } from 'shineout';\n\nconst style: React.CSSProperties = {\n  color: '#fff',\n  lineHeight: '30px',\n  textAlign: 'center',\n  background: '#197afa',\n  fontSize: 14,\n};\n\nconst App: React.FC = () => (\n  <Grid style={{ textAlign: 'center' }}>\n    <Grid width={1 / 2} style={style}>\n      1/2\n    </Grid>\n\n    <Grid width={1 / 2} style={{ lineHeight: '30px' }}>\n      <div style={{ fontSize: 14 }}>1/2</div>\n      <div>\n        <Grid style={style} width={1 / 3}>\n          1/3\n        </Grid>\n        <Grid\n          style={{ ...style, background: '#6bb5ff', color: '#fff', fontSize: 14 }}\n          width={1 / 3}\n        >\n          1/3\n        </Grid>\n        <Grid style={style} width={1 / 3}>\n          1/3\n        </Grid>\n      </div>\n    </Grid>\n  </Grid>\n);\n\nexport default App;\n"
    },
    {
      "title": "Gutter",
      "description": "Set grid spacing through the gutter property",
      "code": "/**\n * cn - 间距\n *    -- 通过 gutter 属性设置栅格间距\n * en - Gutter\n *    -- Set grid spacing through the gutter property\n */\nimport React from 'react';\nimport { Grid } from 'shineout';\n\nconst style: React.CSSProperties = {\n  background: '#e8ebf0',\n};\nconst gridStyle: React.CSSProperties = {\n  color: '#fff',\n  lineHeight: '30px',\n  textAlign: 'center',\n  background: '#197afa',\n  fontSize: 14,\n};\nconst gridStyle2: React.CSSProperties = {\n  color: '#fff',\n  lineHeight: '30px',\n  textAlign: 'center',\n  background: '#6bb5ff',\n  fontSize: 14,\n};\n\nconst App: React.FC = () => (\n  <div style={style}>\n    <Grid gutter={8}>\n      {Array.from({ length: 8 })\n        .map((_, i) => i + 1)\n        .map((i) => (\n          <Grid key={i} width={1 / 8}>\n            <div style={i % 2 === 0 ? gridStyle2 : gridStyle}>1/8</div>\n          </Grid>\n        ))}\n    </Grid>\n  </div>\n);\n\nexport default App;\n"
    }
  ],
  "subComponents": [],
  "version": "3.7.10-beta.3",
  "notes": {},
  "classNames": [
    "soui-grid",
    "soui-grid-wrapper",
    "soui-grid-full"
  ],
  "domStructures": [
    {
      "scenario": "渲染场景 1",
      "appliedClassNames": [
        "soui-slider",
        "soui-slider-wrapper",
        "soui-slider-track",
        "soui-slider-track-inner",
        "soui-slider-indicator",
        "soui-slider-indicator-end",
        "soui-slider-scale-wrapper",
        "soui-slider-scale",
        "soui-slider-label",
        "soui-grid",
        "soui-grid-wrapper",
        "soui-grid-full",
        "soui-grid-md-20-000",
        "soui-grid-md-40-000",
        "soui-grid-md-60-000",
        "soui-grid-md-80-000",
        "soui-grid-md-100-000"
      ],
      "domStructure": "\n<div>\n  <div\n    class=\"soui-slider soui-slider-wrapper\"\n  >\n    <div\n      class=\"soui-slider-track\"\n    >\n      <div\n        class=\"soui-slider-track-inner\"\n        dir=\"ltr\"\n        style=\"left: 0%; right: 62.5%;\"\n      >\n        <div\n          class=\"soui-slider-indicator soui-slider-indicator-end\"\n          dir=\"ltr\"\n        />\n      </div>\n    </div>\n    <div\n      class=\"soui-slider-scale-wrapper\"\n    >\n      <div\n        class=\"soui-slider-scale\"\n      >\n        <div\n          class=\"so..."
    },
    {
      "scenario": "渲染场景 2",
      "appliedClassNames": [
        "soui-grid",
        "soui-grid-wrapper",
        "soui-grid-full",
        "soui-grid-md-100-000",
        "soui-grid-md-12-500"
      ],
      "domStructure": "\n<div\n  style=\"background: rgb(232, 235, 240);\"\n>\n  <div\n    class=\"soui-grid soui-grid-wrapper soui-grid-full soui-grid-md-100-000 \"\n    style=\"width: auto; display: block; margin-left: -4px; margin-right: -4px;\"\n  >\n    <div\n      class=\"soui-grid soui-grid-wrapper soui-grid-full soui-grid-md-12-500 \"\n      style=\"padding-left: 4px; padding-right: 4px;\"\n    >\n      <div\n        style=\"color: rgb(255, 255, 255); line-height: 30px; text-align: center; background: rgb(25, 122, 250); font-size: 14..."
    },
    {
      "scenario": "渲染场景 3",
      "appliedClassNames": [
        "soui-grid",
        "soui-grid-wrapper",
        "soui-grid-full",
        "soui-grid-md-100-000",
        "soui-grid-md-50-000",
        "soui-grid-md-33-333"
      ],
      "domStructure": "\n<div\n  class=\"soui-grid soui-grid-wrapper soui-grid-full soui-grid-md-100-000 \"\n  style=\"text-align: center;\"\n>\n  <div\n    class=\"soui-grid soui-grid-wrapper soui-grid-full soui-grid-md-50-000 \"\n    style=\"color: rgb(255, 255, 255); line-height: 30px; text-align: center; background: rgb(25, 122, 250); font-size: 14px;\"\n  >\n    1/2\n  </div>\n  <div\n    class=\"soui-grid soui-grid-wrapper soui-grid-full soui-grid-md-50-000 \"\n    style=\"line-height: 30px;\"\n  >\n    <div\n      style=\"font-size: 14px;\"..."
    },
    {
      "scenario": "渲染场景 4",
      "appliedClassNames": [
        "soui-grid",
        "soui-grid-wrapper",
        "soui-grid-full",
        "soui-grid-md-33-333",
        "soui-offset-md-33-333"
      ],
      "domStructure": "\n<div\n  style=\"background: rgb(232, 235, 240);\"\n>\n  <div\n    class=\"soui-grid soui-grid-wrapper soui-grid-full soui-grid-md-33-333 soui-offset-md-33-333\"\n    style=\"color: rgb(255, 255, 255); line-height: 60px; text-align: center; background: rgb(25, 122, 250); font-size: 14px;\"\n  >\n    With 1/3, Offset 1/3\n  </div>\n</div>\n"
    }
  ],
  "apiSummary": {
    "totalProps": 8,
    "requiredProps": 0,
    "propsWithWhen": 0,
    "examplesCount": 4,
    "classNamesCount": 3,
    "domStructuresCount": 4
  }
}