{
  "name": "Rate",
  "description": "评分打星组件",
  "category": "other",
  "importPath": "import { Rate } from 'shineout'",
  "props": [
    {
      "name": "className",
      "type": "string",
      "required": false,
      "description": "自定义类名"
    },
    {
      "name": "style",
      "type": "CSSProperties",
      "required": false,
      "description": "自定义样式"
    },
    {
      "name": "allowHalf",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "是否允许半选"
    },
    {
      "name": "clearable",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "是否允许再次点击后清除"
    },
    {
      "name": "disabled",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "是否只读"
    },
    {
      "name": "max",
      "type": "number",
      "required": false,
      "defaultValue": "5",
      "description": "选项最大值，整数"
    },
    {
      "name": "repeat",
      "type": "boolean",
      "required": false,
      "defaultValue": "true",
      "description": "为 true 时，显示的选项为当前分值对应选项的复制"
    },
    {
      "name": "size",
      "type": "string | number",
      "required": false,
      "defaultValue": "20",
      "description": "图标大小"
    },
    {
      "name": "text",
      "type": "ReactNode[]",
      "required": false,
      "description": "附加文字"
    },
    {
      "name": "value",
      "type": "number",
      "required": false,
      "defaultValue": "0",
      "description": "选中的 key （受控)"
    },
    {
      "name": "defaultValue",
      "type": "number",
      "required": false,
      "description": "默认值  和 value 类型相同"
    },
    {
      "name": "onChange",
      "type": "((value?: number ) => void)",
      "required": false,
      "description": "值改变回调"
    },
    {
      "name": "background",
      "type": "ReactElement | string | Array<string | ReactElement>",
      "required": false,
      "description": "未选中元素背景"
    },
    {
      "name": "front",
      "type": "ReactElement | string | Array<string | ReactElement>",
      "required": false,
      "defaultValue": "background",
      "description": "选中元素背景"
    },
    {
      "name": "name",
      "type": "Name",
      "required": false,
      "description": "Form 内存取数据的 key"
    },
    {
      "name": "beforeChange",
      "type": "((value: T) => void | T )",
      "required": false,
      "description": "值改变前的回调，当返回值不为空时将作为组件的新值"
    },
    {
      "name": "reserveAble",
      "type": "boolean",
      "required": false,
      "description": "控制组件卸载时是否保留字段数据。设置为 true 时，组件移除后在表单状态中保留数据。适用于动态表单、条件字段，或需要临时隐藏/显示字段但保留其值的场景"
    },
    {
      "name": "rules",
      "type": "RuleItem[]",
      "required": false,
      "description": "用于校验字段值的规则数组。每个规则可以是函数、正则表达式或规则对象。支持内置规则（必填、邮箱等）和自定义校验逻辑。详细配置参见 [Rule](/components/rule)"
    },
    {
      "name": "onError",
      "type": "((error?: Error ) => void)",
      "required": false,
      "description": "校验完成时触发的回调函数。接收校验错误（如果有）作为参数。适用于自定义错误处理、记录校验结果，或根据校验状态触发副作用"
    },
    {
      "name": "bind",
      "type": "string[]",
      "required": false,
      "description": "当前字段值改变时需要重新校验的字段名称数组。启用字段间的联动校验功能。常用于密码确认、关联下拉选择或相互依赖的表单计算等场景"
    }
  ],
  "examples": [
    {
      "name": "01-base",
      "title": "cn - 基本用法",
      "code": "/**\n * cn - 基本用法\n *    -- Rate 为一个函数，创建一个指定图标或文字的 Rate 组件，供多处复用\n * en - Base\n *    -- Rate is a function that creates a new custom Rate component that specifies an icon or text\n */\nimport React from 'react';\nimport { Rate } from 'shineout';\n\nconst star = (\n  <svg viewBox='0 0 24 24' fill='currentColor' xmlns='http://www.w3.org/2000/svg'>\n    <path d='M8.276 7.825L1.85649 8.7559L1.74278 8.77878C1.00761 8.96968 0.736859 9.90915 1.30093 10.4606L5.953 15.008L4.84231 21.3268L4.82911 21.4327C4.77288 22.2003 5.59415 22.7575 6.29763 22.3824L11.999 19.343L17.7023 22.3825L17.7988 22.4279C18.5105 22.7194 19.2948 22.1128 19.1578 21.3281L18.054 15.008L22.6997 10.46L22.7779 10.3745C23.2586 9.78723 22.9242 8.86973 22.1443 8.75601L15.758 7.825L12.895 2.05544C12.5264 1.31273 11.4661 1.31545 11.1013 2.06004L8.276 7.825Z' />\n  </svg>\n);\n\nconst StarRate = Rate(star, star);\n\nconst App: React.FC = () => <StarRate />;\n\nexport default App;\n",
      "language": "tsx"
    },
    {
      "name": "02-half",
      "title": "cn - 半选",
      "code": "/**\n * cn - 半选\n *    -- Rate 是否允许半选\n * en - Semi selection\n *    -- Rate whether to allow semi selection\n */\n\nimport React from 'react';\nimport { Rate } from 'shineout';\n\nconst star = (\n  <svg viewBox='0 0 24 24' fill='currentColor' xmlns='http://www.w3.org/2000/svg'>\n    <path d='M8.276 7.825L1.85649 8.7559L1.74278 8.77878C1.00761 8.96968 0.736859 9.90915 1.30093 10.4606L5.953 15.008L4.84231 21.3268L4.82911 21.4327C4.77288 22.2003 5.59415 22.7575 6.29763 22.3824L11.999 19.343L17.7023 22.3825L17.7988 22.4279C18.5105 22.7194 19.2948 22.1128 19.1578 21.3281L18.054 15.008L22.6997 10.46L22.7779 10.3745C23.2586 9.78723 22.9242 8.86973 22.1443 8.75601L15.758 7.825L12.895 2.05544C12.5264 1.31273 11.4661 1.31545 11.1013 2.06004L8.276 7.825Z' />\n  </svg>\n);\n\nconst StarRate = Rate(star, star);\n\nconst App: React.FC = () => <StarRate allowHalf defaultValue={3.5} />;\n\nexport default App;\n",
      "language": "tsx"
    },
    {
      "name": "03-size",
      "title": "cn - 大小",
      "code": "/**\n * cn - 大小\n *    -- 通过 size 属性可以设置大小\n * en - Size\n *    -- Set the size through the size property\n */\n\nimport React from 'react';\nimport { Rate } from 'shineout';\n\nconst star = (\n  <svg viewBox='0 0 24 24' fill='currentColor' xmlns='http://www.w3.org/2000/svg'>\n    <path d='M8.276 7.825L1.85649 8.7559L1.74278 8.77878C1.00761 8.96968 0.736859 9.90915 1.30093 10.4606L5.953 15.008L4.84231 21.3268L4.82911 21.4327C4.77288 22.2003 5.59415 22.7575 6.29763 22.3824L11.999 19.343L17.7023 22.3825L17.7988 22.4279C18.5105 22.7194 19.2948 22.1128 19.1578 21.3281L18.054 15.008L22.6997 10.46L22.7779 10.3745C23.2586 9.78723 22.9242 8.86973 22.1443 8.75601L15.758 7.825L12.895 2.05544C12.5264 1.31273 11.4661 1.31545 11.1013 2.06004L8.276 7.825Z' />\n  </svg>\n);\n\nconst titleStyle = { marginBottom: 8, fontSize: 16, fontWeight: '500' };\nconst StarRate = Rate(star, star);\n\nconst App: React.FC = () => (\n  <div>\n    <div style={titleStyle}>16px</div>\n    <StarRate size={16} style={{ marginBottom: 32 }} />\n    <div style={titleStyle}>24px</div>\n    <StarRate size={24} />\n  </div>\n);\n\nexport default App;\n",
      "language": "tsx"
    },
    {
      "name": "04-text",
      "title": "cn - 附加文字",
      "code": "/**\n * cn - 附加文字\n *    -- text 属性可以为每个选项附加文字\n * en - Text\n *    -- Set text property to append text to each item\n */\n\nimport React from 'react';\nimport { Rate } from 'shineout';\n\nconst star = (\n  <svg viewBox='0 0 24 24' fill='currentColor' xmlns='http://www.w3.org/2000/svg'>\n    <path d='M8.276 7.825L1.85649 8.7559L1.74278 8.77878C1.00761 8.96968 0.736859 9.90915 1.30093 10.4606L5.953 15.008L4.84231 21.3268L4.82911 21.4327C4.77288 22.2003 5.59415 22.7575 6.29763 22.3824L11.999 19.343L17.7023 22.3825L17.7988 22.4279C18.5105 22.7194 19.2948 22.1128 19.1578 21.3281L18.054 15.008L22.6997 10.46L22.7779 10.3745C23.2586 9.78723 22.9242 8.86973 22.1443 8.75601L15.758 7.825L12.895 2.05544C12.5264 1.31273 11.4661 1.31545 11.1013 2.06004L8.276 7.825Z' />\n  </svg>\n);\n\nconst StarRate = Rate(star, star);\n\nconst App: React.FC = () => (\n  <StarRate allowHalf defaultValue={4} text={['poor', 'fair', 'good', 'very good', 'excellent']} />\n);\n\nexport default App;\n",
      "language": "tsx"
    },
    {
      "name": "05-disable",
      "title": "cn - 只读",
      "code": "/**\n * cn - 只读\n *    -- 设置 disabled 标示为只读，只读状态下，value可以传入小数\n * en - Disabled\n *    -- Set disabled to true make it be read-only. When disabled, value can be passed in decimals\n */\n\nimport React from 'react';\nimport { Rate } from 'shineout';\n\nconst star = (\n  <svg viewBox='0 0 24 24' fill='currentColor' xmlns='http://www.w3.org/2000/svg'>\n    <path d='M8.276 7.825L1.85649 8.7559L1.74278 8.77878C1.00761 8.96968 0.736859 9.90915 1.30093 10.4606L5.953 15.008L4.84231 21.3268L4.82911 21.4327C4.77288 22.2003 5.59415 22.7575 6.29763 22.3824L11.999 19.343L17.7023 22.3825L17.7988 22.4279C18.5105 22.7194 19.2948 22.1128 19.1578 21.3281L18.054 15.008L22.6997 10.46L22.7779 10.3745C23.2586 9.78723 22.9242 8.86973 22.1443 8.75601L15.758 7.825L12.895 2.05544C12.5264 1.31273 11.4661 1.31545 11.1013 2.06004L8.276 7.825Z' />\n  </svg>\n);\n\nconst StarRate = Rate(star, star);\n\nconst App: React.FC = () => <StarRate value={3.6} disabled />;\n\nexport default App;\n",
      "language": "tsx"
    }
  ],
  "subComponents": [],
  "version": "3.7.7",
  "apiSummary": {
    "totalProps": 20,
    "requiredProps": 0,
    "propsWithWhen": 0
  },
  "subComponentApis": {}
}