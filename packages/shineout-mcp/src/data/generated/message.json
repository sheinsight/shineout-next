{
  "name": "Message",
  "description": "用户进行操作后，系统对该操作行为内容作出的反馈",
  "category": "feedback",
  "importPath": "import { Message } from 'shineout'",
  "props": [
    {
      "name": "content",
      "type": "ReactNode",
      "required": true,
      "description": "消息内容"
    },
    {
      "name": "duration",
      "type": "number",
      "required": false,
      "defaultValue": "3",
      "description": "消息持续时间，单位秒；如果设置为 0，必须手动关闭"
    }
  ],
  "examples": [
    {
      "title": "Base",
      "description": "Message has 6 static functions that are convenient to call anywhere, includes normal(with/without icon)、success、warn、error and close all messages",
      "code": "/**\n * cn - 基本用法\n *    -- Message 封装了一组全局函数，方便在任意地方调用，包括常规（不带/带icon）、Success、Warn、Error和关闭所有消息提醒\n * en - Base\n *    -- Message has 6 static functions that are convenient to call anywhere, includes normal(with/without icon)、success、warn、error and close all messages\n */\nimport React from 'react';\nimport { Button, Message } from 'shineout';\n\nconst commonStyle = { margin: 0 };\nconst App: React.FC = () => (\n  <div style={{display: 'flex', flexWrap: 'wrap', gap: 24}}>\n    <Button\n      onClick={() => {\n        Message.show('Some message.');\n      }}\n    >\n      Show\n    </Button>\n    <Button\n      style={commonStyle}\n      onClick={() => {\n        Message.info('This is a message of info.');\n      }}\n      type='primary'\n    >\n      Info\n    </Button>\n    <Button\n      type='success'\n      style={commonStyle}\n      onClick={() => {\n        Message.success('This is a message of success.');\n      }}\n    >\n      Success\n    </Button>\n    <Button\n      style={commonStyle}\n      type='warning'\n      onClick={() => {\n        Message.warn('This is a message of warning.');\n      }}\n    >\n      Warn\n    </Button>\n    <Button\n      type='danger'\n      style={commonStyle}\n      onClick={() => {\n        Message.error('This is a message of error.');\n      }}\n    >\n      Error\n    </Button>\n\n    <Button\n      style={commonStyle}\n      onClick={() => {\n        Message.close();\n      }}\n    >\n      Close All\n    </Button>\n  </div>\n);\n\nexport default App;\n"
    },
    {
      "title": "Duration",
      "description": "Set duration property to control the duration of the message display. The default value is 3 seconds",
      "code": "/**\n * cn - 显示时长\n *    -- 通过 duration 属性可以控制消息显示的时长，默认为3秒；当设定为 0s 时，则需要用户手动关闭 Message\n * en - Duration\n *    -- Set duration property to control the duration of the message display. The default value is 3 seconds\n *    -- When duration is set to 0, the message will not hide automatically\n */\nimport React from 'react';\nimport { Button, Message } from 'shineout';\n\nconst s10 = () => Message.info('This message will close after 10 seconds.', 10);\nconst s0 = () => Message.error('This message will not close utill click the close icon.', 0);\n\nconst commonStyle = { marginInlineStart: '24px' };\nconst App: React.FC = () => (\n  <div>\n    <Button onClick={s10}>Duration 10 s.</Button>\n    <Button onClick={s0} style={commonStyle}>\n      Manually close\n    </Button>\n  </div>\n);\n\nexport default App;\n"
    },
    {
      "title": "Notification",
      "description": "Set position property to specify the pop-up layer location, optional value: top, middle, top-left, top-right, bottom-left, bottom-right",
      "code": "/**\n * cn - 弹出位置\n *    -- 设置 positoin 参数，修改显示位置，可以实现消息提醒展示位置，可选值：top, middle, top-left, top-right, bottom-left, bottom-right\n * en - Notification\n *    -- Set position property to specify the pop-up layer location, optional value: top, middle, top-left, top-right, bottom-left, bottom-right\n */\nimport React, { useState } from 'react';\nimport { Button, Message, Radio, TYPE } from 'shineout';\n\ntype MessageOptions = TYPE.Message.Options;\n\nconst App: React.FC = () => {\n  const [position, setPosition] = useState<MessageOptions['position']>('top-right');\n\n  const show = () => {\n    Message.info(<div style={{ width: 240 }}>some message.</div>, 3, {\n      position,\n      title: 'notify title',\n    });\n  };\n\n  return (\n    <div>\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: 24 }}>\n        <Radio.Group\n          keygen\n          value={position}\n          onChange={setPosition}\n          data={['top', 'middle', 'top-left', 'top-right', 'bottom-left', 'bottom-right']}\n        />\n      </div>\n      <Button onClick={show}>Show message.</Button>\n    </div>\n  );\n};\n\nexport default App;\n"
    },
    {
      "title": "Close",
      "description": "Set onClose to handle close event",
      "code": "/**\n * cn - 关闭回调\n *    -- 通过第三个参数[options]的 onClose 属性处理消息关闭回调。以下用例将在 Message 关闭后弹出新的 Message\n * en - Close\n *    -- Set onClose to handle close event\n */\nimport React from 'react';\nimport { Button, Message } from 'shineout';\n\nconst App: React.FC = () => {\n  const close = () => {\n    Message.warn('Close this message will display another message.', 0, {\n      onClose: () => {\n        Message.info('You can close the message now.');\n      },\n    });\n  };\n\n  return <Button onClick={close}>Close callback</Button>;\n};\n\nexport default App;\n"
    },
    {
      "title": "Close",
      "description": "Message return close func async",
      "code": "/**\n * cn - 手动关闭\n *    -- Message 会异步返回一个关闭函数，调用它来关闭当前 Messsage\n * en - Close\n *    -- Message return close func async\n */\nimport React from 'react';\nimport { Button, Message, Link } from 'shineout';\n\nconst App: React.FC = () => {\n  const msg = async () => {\n    const close = await Message.success(\n      <div>\n        I will always show until &nbsp;\n        <Link onClick={() => close()}>manually closed</Link>\n      </div>,\n      0,\n      {\n        title: 'Manual Close',\n      },\n    );\n  };\n\n  return <Button onClick={msg}>Manual Close</Button>;\n};\n\nexport default App;\n"
    },
    {
      "title": "Target",
      "description": "Set container to render target node",
      "code": "/**\n * cn - 指定容器\n *    -- 使用 container 来指定 Message 渲染的目标节点\n * en - Target\n *    -- Set container to render target node\n */\nimport React, { useRef } from 'react';\nimport { Button, Message } from 'shineout';\n\nconst App: React.FC = () => {\n  const container = useRef<HTMLDivElement>(null);\n\n  return (\n    <div>\n      <div\n        ref={container}\n        id='container'\n        style={{\n          width: 100,\n          height: 100,\n          background: '#f4f5f8',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Button\n          id='button'\n          onClick={() => {\n            Message.show('Some message.', 3, {\n              container: container.current || undefined,\n            });\n          }}\n        >\n          Show\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default App;\n"
    }
  ],
  "subComponents": [],
  "version": "3.7.10-beta.3",
  "notes": {},
  "classNames": [
    "soui-message",
    "soui-message-wrapper",
    "soui-message-item",
    "soui-message-item-dismissed",
    "soui-message-item-show",
    "soui-message-message"
  ],
  "domStructures": [
    {
      "scenario": "渲染场景 1",
      "appliedClassNames": [
        "soui-button",
        "soui-button-secondary",
        "soui-button-button",
        "soui-button-primary",
        "soui-button-success",
        "soui-button-warning",
        "soui-button-danger"
      ],
      "domStructure": "\n<div\n  style=\"display: flex; flex-wrap: wrap; gap: 24px;\"\n>\n  <button\n    class=\"soui-button soui-button-secondary soui-button-button\"\n    dir=\"ltr\"\n    type=\"button\"\n  >\n    <span>\n      Show\n    </span>\n  </button>\n  <button\n    class=\"soui-button soui-button-primary soui-button-button\"\n    dir=\"ltr\"\n    style=\"margin: 0px;\"\n    type=\"button\"\n  >\n    <span>\n      Info\n    </span>\n  </button>\n  <button\n    class=\"soui-button soui-button-success soui-button-button\"\n    dir=\"ltr\"\n    style=\"marg..."
    },
    {
      "scenario": "渲染场景 2",
      "appliedClassNames": [
        "soui-button",
        "soui-button-secondary",
        "soui-button-button"
      ],
      "domStructure": "\n<div>\n  <button\n    class=\"soui-button soui-button-secondary soui-button-button\"\n    dir=\"ltr\"\n    type=\"button\"\n  >\n    <span>\n      Duration 10 s.\n    </span>\n  </button>\n  <button\n    class=\"soui-button soui-button-secondary soui-button-button\"\n    dir=\"ltr\"\n    style=\"margin-inline-start: 24px;\"\n    type=\"button\"\n  >\n    <span>\n      Manually close\n    </span>\n  </button>\n</div>\n"
    },
    {
      "scenario": "渲染场景 3",
      "appliedClassNames": [
        "soui-radio-group",
        "soui-radio",
        "soui-radio-wrapper",
        "soui-radio-indicator-wrapper",
        "soui-radio-indicator",
        "soui-radio-desc",
        "soui-radio-wrapper-checked",
        "soui-button",
        "soui-button-secondary",
        "soui-button-button"
      ],
      "domStructure": "\n<div>\n  <div\n    style=\"display: flex; align-items: center; margin-bottom: 24px;\"\n  >\n    <div\n      class=\"soui-radio-group\"\n    >\n      <div\n        class=\"soui-radio soui-radio-wrapper\"\n      >\n        <input\n          style=\"display: none;\"\n          tabindex=\"0\"\n          type=\"radio\"\n        />\n        <span\n          class=\"soui-radio-indicator-wrapper\"\n        >\n          <span\n            class=\"soui-radio-indicator\"\n            tabindex=\"1\"\n          />\n        </span>\n        <span\n ..."
    },
    {
      "scenario": "渲染场景 4",
      "appliedClassNames": [
        "soui-message",
        "soui-message-wrapper",
        "soui-message-item",
        "soui-message-item-show",
        "soui-message-message",
        "soui-alert",
        "soui-alert-alert",
        "soui-alert-warning",
        "soui-alert-content",
        "soui-alert-text",
        "soui-alert-close-wrapper",
        "soui-alert-close"
      ],
      "domStructure": "\n<div\n  class=\"soui-message soui-message-wrapper\"\n  data-soui-position=\"top\"\n>\n  <div\n    class=\"soui-message-item soui-message-item-show \"\n  >\n    <div\n      class=\"soui-message-message soui-alert soui-alert-alert soui-alert-warning\"\n      data-soui-type=\"message\"\n    >\n      <div\n        class=\"soui-alert-content\"\n      >\n        <div\n          class=\"soui-alert-text\"\n        >\n          Test\n        </div>\n      </div>\n      <div\n        class=\"soui-alert-close-wrapper\"\n      >\n        <div\n ..."
    },
    {
      "scenario": "渲染场景 5",
      "appliedClassNames": [
        "soui-message",
        "soui-message-wrapper",
        "soui-message-item",
        "soui-message-item-show",
        "soui-message-message",
        "soui-alert",
        "soui-alert-alert",
        "soui-alert-warning",
        "soui-alert-content",
        "soui-alert-text",
        "soui-alert-close-wrapper",
        "soui-alert-close"
      ],
      "domStructure": "\n<div\n  class=\"soui-message soui-message-wrapper\"\n  data-soui-position=\"top\"\n>\n  <div\n    class=\"soui-message-item soui-message-item-show \"\n  >\n    <div\n      class=\"soui-message-message soui-alert soui-alert-alert soui-alert-warning\"\n      data-soui-type=\"message\"\n    >\n      <div\n        class=\"soui-alert-content\"\n      >\n        <div\n          class=\"soui-alert-text\"\n        >\n          Test\n        </div>\n      </div>\n      <div\n        class=\"soui-alert-close-wrapper\"\n      >\n        <div\n ..."
    },
    {
      "scenario": "渲染场景 1",
      "appliedClassNames": [
        "soui-button",
        "soui-button-secondary",
        "soui-button-button",
        "soui-button-primary",
        "soui-button-success",
        "soui-button-warning",
        "soui-button-danger"
      ],
      "domStructure": "\n<div\n  style=\"display: flex; flex-wrap: wrap; gap: 24px;\"\n>\n  <button\n    class=\"soui-button soui-button-secondary soui-button-button\"\n    dir=\"ltr\"\n    type=\"button\"\n  >\n    <span>\n      Show\n    </span>\n  </button>\n  <button\n    class=\"soui-button soui-button-primary soui-button-button\"\n    dir=\"ltr\"\n    style=\"margin: 0px;\"\n    type=\"button\"\n  >\n    <span>\n      Info\n    </span>\n  </button>\n  <button\n    class=\"soui-button soui-button-success soui-button-button\"\n    dir=\"ltr\"\n    style=\"marg..."
    },
    {
      "scenario": "渲染场景 2",
      "appliedClassNames": [
        "soui-button",
        "soui-button-secondary",
        "soui-button-button"
      ],
      "domStructure": "\n<div>\n  <button\n    class=\"soui-button soui-button-secondary soui-button-button\"\n    dir=\"ltr\"\n    type=\"button\"\n  >\n    <span>\n      Duration 10 s.\n    </span>\n  </button>\n  <button\n    class=\"soui-button soui-button-secondary soui-button-button\"\n    dir=\"ltr\"\n    style=\"margin-inline-start: 24px;\"\n    type=\"button\"\n  >\n    <span>\n      Manually close\n    </span>\n  </button>\n</div>\n"
    },
    {
      "scenario": "渲染场景 3",
      "appliedClassNames": [
        "soui-radio-group",
        "soui-radio",
        "soui-radio-wrapper",
        "soui-radio-indicator-wrapper",
        "soui-radio-indicator",
        "soui-radio-desc",
        "soui-radio-wrapper-checked",
        "soui-button",
        "soui-button-secondary",
        "soui-button-button"
      ],
      "domStructure": "\n<div>\n  <div\n    style=\"display: flex; align-items: center; margin-bottom: 24px;\"\n  >\n    <div\n      class=\"soui-radio-group\"\n    >\n      <div\n        class=\"soui-radio soui-radio-wrapper\"\n      >\n        <input\n          style=\"display: none;\"\n          tabindex=\"0\"\n          type=\"radio\"\n        />\n        <span\n          class=\"soui-radio-indicator-wrapper\"\n        >\n          <span\n            class=\"soui-radio-indicator\"\n            tabindex=\"1\"\n          />\n        </span>\n        <span\n ..."
    },
    {
      "scenario": "渲染场景 4",
      "appliedClassNames": [
        "soui-message",
        "soui-message-wrapper",
        "soui-message-item",
        "soui-message-item-show",
        "soui-message-message",
        "soui-alert",
        "soui-alert-alert",
        "soui-alert-warning",
        "soui-alert-content",
        "soui-alert-text",
        "soui-alert-close-wrapper",
        "soui-alert-close"
      ],
      "domStructure": "\n<div\n  class=\"soui-message soui-message-wrapper\"\n  data-soui-position=\"top\"\n>\n  <div\n    class=\"soui-message-item soui-message-item-show \"\n  >\n    <div\n      class=\"soui-message-message soui-alert soui-alert-alert soui-alert-warning\"\n      data-soui-type=\"message\"\n    >\n      <div\n        class=\"soui-alert-content\"\n      >\n        <div\n          class=\"soui-alert-text\"\n        >\n          Test\n        </div>\n      </div>\n      <div\n        class=\"soui-alert-close-wrapper\"\n      >\n        <div\n ..."
    },
    {
      "scenario": "渲染场景 5",
      "appliedClassNames": [
        "soui-message",
        "soui-message-wrapper",
        "soui-message-item",
        "soui-message-item-show",
        "soui-message-message",
        "soui-alert",
        "soui-alert-alert",
        "soui-alert-warning",
        "soui-alert-content",
        "soui-alert-text",
        "soui-alert-close-wrapper",
        "soui-alert-close"
      ],
      "domStructure": "\n<div\n  class=\"soui-message soui-message-wrapper\"\n  data-soui-position=\"top\"\n>\n  <div\n    class=\"soui-message-item soui-message-item-show \"\n  >\n    <div\n      class=\"soui-message-message soui-alert soui-alert-alert soui-alert-warning\"\n      data-soui-type=\"message\"\n    >\n      <div\n        class=\"soui-alert-content\"\n      >\n        <div\n          class=\"soui-alert-text\"\n        >\n          Test\n        </div>\n      </div>\n      <div\n        class=\"soui-alert-close-wrapper\"\n      >\n        <div\n ..."
    }
  ],
  "apiSummary": {
    "totalProps": 2,
    "requiredProps": 1,
    "propsWithWhen": 0,
    "examplesCount": 6,
    "classNamesCount": 6,
    "domStructuresCount": 10
  },
  "subComponentApis": {},
  "relatedTypes": {
    "MessageOptions": {
      "title": "MessageOptions",
      "description": "",
      "notes": {},
      "props": [
        {
          "name": "className",
          "type": "string",
          "required": false,
          "description": "类名"
        },
        {
          "name": "onClose",
          "type": "(() => void)",
          "required": false,
          "description": "关闭后回调事件"
        },
        {
          "name": "position",
          "type": "\"top\" | \"middle\" | \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\"",
          "required": false,
          "defaultValue": "\\\"top\\\"",
          "description": "消息显示的位置"
        },
        {
          "name": "title",
          "type": "string",
          "required": false,
          "description": "标题文字"
        },
        {
          "name": "hideClose",
          "type": "boolean",
          "required": false,
          "defaultValue": "false",
          "description": "是否隐藏关闭按钮"
        },
        {
          "name": "top",
          "type": "string",
          "required": false,
          "defaultValue": "\\\"auto\\\"",
          "description": "距离顶部的距离。注意，Message 容器距离顶部默认为 20px，如果需要距离顶部 0px，需要设置为 -20px"
        },
        {
          "name": "container",
          "type": "(() => HTMLElement) | HTMLElement",
          "required": false,
          "defaultValue": "document.body",
          "description": "渲染的目标节点"
        }
      ]
    }
  }
}