{
  "name": "Menu",
  "description": "用于承载网站的架构，并提供跳转的菜单列表",
  "category": "navigation",
  "importPath": "import { Menu } from 'shineout'",
  "props": [
    {
      "name": "className",
      "type": "string",
      "required": false,
      "description": "自定义类名"
    },
    {
      "name": "style",
      "type": "CSSProperties",
      "required": false,
      "description": "自定义样式"
    },
    {
      "name": "mode",
      "type": "\"inline\" | \"vertical\" | \"horizontal\" | \"vertical-auto\"",
      "required": false,
      "defaultValue": "\\\"inline\\\"",
      "description": "菜单样式"
    },
    {
      "name": "data",
      "type": "object[]",
      "required": false,
      "defaultValue": "[]",
      "description": "需要渲染成菜单的数据"
    },
    {
      "name": "theme",
      "type": "\"dark\" | \"light\"",
      "required": false,
      "description": "主题"
    },
    {
      "name": "height",
      "type": "string | number",
      "required": false,
      "description": "菜单高度"
    },
    {
      "name": "openKeys",
      "type": "(string | number)[]",
      "required": false,
      "defaultValue": "[]",
      "description": "展开的菜单(受控)"
    },
    {
      "name": "caretColor",
      "type": "string",
      "required": false,
      "description": "三角展开符颜色"
    },
    {
      "name": "frontCaret",
      "type": "boolean",
      "required": false,
      "description": "前置实心三角展开符"
    },
    {
      "name": "inlineIndent",
      "type": "number",
      "required": false,
      "defaultValue": "24",
      "description": "每一层缩进宽度"
    },
    {
      "name": "looseChildren",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "如果 children 有设置则菜单项可展开"
    },
    {
      "name": "keygen",
      "type": "| ObjectKey<DataItem> | ((data: DataItem, index?: number) => string | number) | true",
      "required": true,
      "defaultValue": "true",
      "description": "生成每一项key的辅助方法。为 true 时，以数据项本身作为key，相当于 (d => d)。为函数时，使用此函数返回值。为string时，使用这个string对应的数据值。如 \\\"id\\\"，相当于 (d => d.id)"
    },
    {
      "name": "defaultOpenKeys",
      "type": "(string | number)[]",
      "required": false,
      "defaultValue": "[]",
      "description": "初始展开的菜单;如果需要设置此值,则需要设置keygen,此值为一个包含key的数组"
    },
    {
      "name": "parentSelectable",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "父级菜单是否可选中"
    },
    {
      "name": "onClick",
      "type": "((data: DataItem) => void)",
      "required": false,
      "description": "子菜单点击事件,参数为当条数据"
    },
    {
      "name": "active",
      "type": "((data: DataItem) => boolean)",
      "required": false,
      "description": "验证是否激活,参数为对应的数据对象,返回true则代表该菜单激活"
    },
    {
      "name": "disabled",
      "type": "((data: DataItem) => boolean)",
      "required": false,
      "defaultValue": "d => d.disabled",
      "description": "是否禁用选项"
    },
    {
      "name": "frontCaretType",
      "type": "\"hollow\" | \"solid\"",
      "required": false,
      "defaultValue": "\\\"solid\\\"",
      "description": "前置三角展开符类型"
    },
    {
      "name": "onOpenChange",
      "type": "((keys: Key[]) => void)",
      "required": false,
      "description": "菜单展开/收起回调"
    },
    {
      "name": "linkKey",
      "type": "((d: DataItem) => string) | ObjectKey<DataItem>",
      "required": false,
      "description": "需要注入子菜单的链接键值"
    },
    {
      "name": "renderItem",
      "type": "ObjectKey<DataItem> | ((data: DataItem, index: number) => ReactNode)",
      "required": false,
      "defaultValue": "\\\"title\\\"",
      "description": "元素渲染方式,如果为字符串,则会以对应的值作为显示内容;如果为函数,则以函数返回的结果作为显示内容,函数参数为对应的数据对象"
    },
    {
      "name": "renderIcon",
      "type": "((data: DataItem) => ReactNode)",
      "required": false,
      "description": "渲染Icon"
    },
    {
      "name": "collapse",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "是否折叠"
    },
    {
      "name": "header",
      "type": "ReactNode",
      "required": false,
      "description": "头部内容， 仅在 mode为 \\\"inline\\\" 时生效"
    }
  ],
  "examples": [
    {
      "title": "Base",
      "description": "Menu generates menu items through data",
      "code": "/**\n * cn - 基本用法\n *    -- Menu 通过数据来生成菜单项\n * en - Base\n *    -- Menu generates menu items through data\n */\n\nimport React, { useState } from 'react';\nimport { Menu, TYPE } from 'shineout';\n\ninterface MenuItem {\n  id: string;\n  title: string;\n  children?: MenuItem[];\n}\ntype MenuProps = TYPE.Menu.Props<MenuItem, string>;\ntype MenuActive = MenuProps['active'];\ntype MenuRenderItem = MenuProps['renderItem'];\n\nconst data: MenuItem[] = [\n  {\n    id: '1',\n    title: 'Navigation One',\n  },\n  {\n    id: '3',\n    title: 'Navigation Two',\n    children: [\n      {\n        id: '4',\n        title: 'Option 1',\n      },\n      {\n        id: '5',\n        title: 'Option 2',\n      },\n    ],\n  },\n  {\n    id: '6',\n    title: 'Navigation Three',\n    children: [\n      {\n        id: '7',\n        title: 'Option 3',\n      },\n      {\n        id: '8',\n        title: 'Option 4',\n        children: [\n          {\n            id: '9',\n            title: 'Option 1',\n          },\n          {\n            id: '10',\n            title: 'Option 2',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: '2',\n    title: 'Navigation Four',\n  },\n  {\n    id: '11',\n    title: 'This is a very very very very long menu title',\n  },\n];\n\nconst App: React.FC = () => {\n  const [active, setActive] = useState('1');\n\n  const handleClick = (d: MenuItem) => setActive(d.id);\n\n  const renderItem: MenuRenderItem = (d: MenuItem) => d.title;\n\n  const checkActive: MenuActive = (d: MenuItem) => active === d.id;\n\n  return (\n    <div>\n      <Menu\n        keygen='id'\n        data={data}\n        inlineIndent={14}\n        active={checkActive}\n        onClick={handleClick}\n        style={{ width: 256, border: '1px solid #e8ebf0' }}\n        renderItem={renderItem}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"
    },
    {
      "title": "link",
      "description": "Can render the corresponding link by setting linkKey",
      "code": "/**\n * cn - 链接\n *    --  可以通过设置 linkKey 来渲染出对应的链接\n * en - link\n *    -- Can render the corresponding link by setting linkKey\n */\nimport React from 'react';\nimport { Menu, TYPE } from 'shineout';\n\ninterface MenuItem {\n  id: string;\n  link: string;\n  title: string;\n}\ntype MenuProps = TYPE.Menu.Props<MenuItem, string>;\ntype MenuRenderItem = MenuProps['renderItem'];\n\nconst data: MenuItem[] = [\n  {\n    id: '1',\n    title: 'Google',\n    link: 'https://www.google.com',\n  },\n  {\n    id: '2',\n    title: 'Strackoverflow',\n    link: 'https://stackoverflow.com/',\n  },\n  {\n    id: '3',\n    title: 'Github',\n    link: 'https://github.com/',\n  },\n];\n\nconst App: React.FC = () => {\n  const renderItem: MenuRenderItem = (d: MenuItem) => <a href={d.link} target=\"_blank\" rel=\"noreferrer\">{d.title}</a>;\n\n  return (\n    <Menu\n      keygen='id'\n      linkKey='link'\n      data={data}\n      renderItem={renderItem}\n      style={{ width: 256, border: '1px solid #e8ebf0' }}\n      inlineIndent={14}\n    />\n  );\n};\n\nexport default App;\n"
    },
    {
      "title": "Parent Selectable",
      "description": "Setting the parentSelectable property can make the parent menu trigger the onClick of the Menu after clicking",
      "code": "/**\n * cn - 父菜单可选中\n *    -- 设置 parentSelectable 使父级菜单支持单独选中 <br /> 此时父级菜单左侧区域用于选中，偏右侧区域用于展开和收起子菜单\n * en - Parent Selectable\n *    -- Setting the parentSelectable property can make the parent menu trigger the onClick of the Menu after clicking\n */\nimport React, { useState } from 'react';\nimport { Menu, TYPE } from 'shineout';\n\ninterface MenuItem {\n  id: string;\n  title: string;\n  children?: MenuItem[];\n}\ntype MenuProps = TYPE.Menu.Props<MenuItem, string>;\ntype MenuActive = MenuProps['active'];\ntype MenuRenderItem = MenuProps['renderItem'];\n\nconst data: MenuItem[] = [\n  {\n    id: '1',\n    title: 'Parent 1',\n    children: [\n      {\n        id: '2',\n        title: 'Option 2',\n      },\n      {\n        id: '3',\n        title: 'Option 3',\n      },\n    ],\n  },\n  {\n    id: '4',\n    title: 'Parent 4',\n    children: [\n      {\n        id: '5',\n        title: 'Option 5',\n      },\n      {\n        id: '6',\n        title: 'Option 6',\n      },\n    ],\n  },\n  {\n    id: '7',\n    title: 'Option 7',\n  },\n];\n\nconst App: React.FC = () => {\n  const [active, setActive] = useState('1');\n\n  const renderItem: MenuRenderItem = (d: MenuItem) => d.title;\n\n  const checkActive: MenuActive = (d: MenuItem) => active === d.id;\n\n  const handleClick = (d: MenuItem) => {\n    setActive(d.id);\n  };\n\n  return (\n    <Menu\n      keygen='id'\n      inlineIndent={14}\n      data={data}\n      parentSelectable\n      active={checkActive}\n      onClick={handleClick}\n      style={{ width: 256, border: '1px solid #e8ebf0' }}\n      renderItem={renderItem}\n    />\n  );\n};\n\nexport default App;\n"
    },
    {
      "title": "put the expander in front",
      "description": "use frontCaret to put the expander in front",
      "code": "/**\n * cn - 前置展开符\n *    -- 使用 frontCaret 来前置展开符\n *    -- 使用 frontCaretType 来设置展开图标类型\n * en - put the expander in front\n *    -- use frontCaret to put the expander in front\n *    -- Use frontCaretType to set the Icon type\n */\nimport React, { useState } from 'react';\nimport { Menu, TYPE } from 'shineout';\n\ninterface MenuItem {\n  id: string;\n  title: string;\n  children?: MenuItem[];\n}\ntype MenuProps = TYPE.Menu.Props<MenuItem, string>;\ntype MenuActive = MenuProps['active'];\ntype MenuRenderItem = MenuProps['renderItem'];\n\nconst data: MenuItem[] = [\n  {\n    id: '1',\n    title: 'Navigation One',\n  },\n  {\n    id: '3',\n    title: 'Navigation Two',\n    children: [\n      {\n        id: '4',\n        title: 'Option 1',\n      },\n      {\n        id: '5',\n        title: 'Option 2',\n      },\n    ],\n  },\n  {\n    id: '6',\n    title: 'Navigation Three',\n    children: [\n      {\n        id: '7',\n        title: 'Option 3',\n      },\n      {\n        id: '8',\n        title: 'Option 4',\n        children: [\n          {\n            id: '9',\n            title: 'Option 1',\n          },\n          {\n            id: '10',\n            title: 'Option 2',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: '2',\n    title: 'Navigation Four',\n  },\n];\n\nconst App: React.FC = () => {\n  const [active, setActive] = useState('1');\n\n  const handleClick = (d: MenuItem) => setActive(d.id);\n\n  const renderItem: MenuRenderItem = (d: MenuItem) => d.title;\n\n  const checkActive: MenuActive = (d: MenuItem) => active === d.id;\n\n  return (\n    <div style={{ display: 'flex', gap: 24 }}>\n      <Menu\n        keygen='id'\n        frontCaret\n        frontCaretType='solid'\n        data={data}\n        inlineIndent={14}\n        active={checkActive}\n        onClick={handleClick}\n        style={{ width: 256, border: '1px solid #e8ebf0' }}\n        renderItem={renderItem}\n      />\n      <Menu\n        keygen='id'\n        frontCaret\n        frontCaretType='hollow'\n        data={data}\n        inlineIndent={14}\n        active={checkActive}\n        onClick={handleClick}\n        style={{ width: 256, border: '1px solid #e8ebf0' }}\n        renderItem={renderItem}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"
    },
    {
      "title": "Disabled",
      "description": "Disable the option by the disabled property",
      "code": "/**\n * cn - 禁用菜单\n *    -- 通过 disabled 属性可以禁用选项\n * en - Disabled\n *    --Disable the option by the disabled property\n */\nimport React, { useState } from 'react';\nimport { Menu, TYPE } from 'shineout';\n\ninterface MenuItem {\n  id: string;\n  title: string;\n  disabled?: boolean;\n  children?: MenuItem[];\n}\ntype MenuProps = TYPE.Menu.Props<MenuItem, string>;\ntype MenuActive = MenuProps['active'];\ntype MenuOnClick = MenuProps['onClick'];\ntype MenuDisabled = MenuProps['disabled'];\ntype MenuRenderItem = MenuProps['renderItem'];\n\nconst data: MenuItem[] = [\n  {\n    id: '1',\n    title: 'Navigation One',\n  },\n  {\n    id: '3',\n    title: 'Navigation Two',\n    children: [\n      {\n        id: '4',\n        title: 'Option 1',\n        disabled: true,\n      },\n      {\n        id: '5',\n        title: 'Option 2',\n      },\n    ],\n  },\n  {\n    id: '6',\n    title: 'Navigation Three',\n    children: [\n      {\n        id: '7',\n        title: 'Option 3',\n      },\n      {\n        id: '8',\n        title: 'Option 4',\n        children: [\n          {\n            id: '9',\n            title: 'Option 1',\n          },\n          {\n            id: '10',\n            title: 'Option 2',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: '2',\n    title: 'Navigation Four',\n    disabled: true,\n  },\n];\n\nconst App: React.FC = () => {\n  const [active, setActive] = useState(['1']);\n\n  const renderItem: MenuRenderItem = (d: MenuItem) => d.title;\n\n  const checkDisabled: MenuDisabled = (d: MenuItem) => !!d.disabled;\n\n  const handleClick: MenuOnClick = (d: MenuItem) => setActive([d.id]);\n\n  const checkActive: MenuActive = (d: MenuItem) => active.includes(d.id);\n\n  return (\n    <Menu\n      data={data}\n      keygen='id'\n      mode='inline'\n      inlineIndent={14}\n      active={checkActive}\n      onClick={handleClick}\n      style={{ width: 256, border: '1px solid #e8ebf0' }}\n      renderItem={renderItem}\n      disabled={checkDisabled}\n    />\n  );\n};\n\nexport default App;\n"
    },
    {
      "title": "Controlled",
      "description": "Set active property to control the actived option",
      "code": "/**\n * cn - 受控\n *    -- active 参数控制选中选项\n * en - Controlled\n *    -- Set active property to control the actived option\n */\nimport React, { useState } from 'react';\nimport { Menu, TYPE } from 'shineout';\n\ninterface MenuItem {\n  id: string;\n  title: string;\n  children?: MenuItem[];\n}\ntype MenuProps = TYPE.Menu.Props<MenuItem, string>;\ntype MenuActive = MenuProps['active'];\ntype MenuOnClick = MenuProps['onClick'];\ntype MenuRenderItem = MenuProps['renderItem'];\n\nconst data: MenuItem[] = [\n  {\n    id: '1',\n    title: 'Navigation One',\n  },\n  {\n    id: '3',\n    title: 'Navigation Two',\n    children: [\n      {\n        id: '4',\n        title: 'Option 1',\n      },\n      {\n        id: '5',\n        title: 'Option 2',\n      },\n    ],\n  },\n  {\n    id: '6',\n    title: 'Navigation Three',\n    children: [\n      {\n        id: '7',\n        title: 'Option 3',\n      },\n      {\n        id: '8',\n        title: 'Option 4',\n        children: [\n          {\n            id: '9',\n            title: 'Option 1',\n          },\n          {\n            id: '10',\n            title: 'Option 2',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: '2',\n    title: 'Navigation Four',\n  },\n];\n\nconst App: React.FC = () => {\n  const [active, setActive] = useState(['1']);\n\n  const renderItem: MenuRenderItem = (d: MenuItem) => d.title;\n\n  const handleClick: MenuOnClick = (d: MenuItem) => setActive([d.id]);\n\n  const checkActive: MenuActive = (d: MenuItem) => active.includes(d.id);\n\n  return (\n    <Menu\n      data={data}\n      keygen='id'\n      mode='inline'\n      inlineIndent={14}\n      active={checkActive}\n      onClick={handleClick}\n      style={{ width: 256, border: '1px solid #e8ebf0' }}\n      defaultOpenKeys={['3']}\n      renderItem={renderItem}\n    />\n  );\n};\nexport default App;\n"
    },
    {
      "title": "RenderItem",
      "description": "Set the renderItem property to show format content",
      "code": "/**\n * cn - 自定义渲染\n *    -- 设置 renderItem 属性展现稍微复杂的内容\n * en - RenderItem\n *    -- Set the renderItem property to show format content\n */\nimport React, { useState } from 'react';\nimport { Menu, TYPE } from 'shineout';\n\ninterface MenuItem {\n  id: string;\n  title: string;\n  children?: MenuItem[];\n}\ninterface IconList {\n  [x: number]: React.ReactNode;\n}\ntype MenuProps = TYPE.Menu.Props<MenuItem, string>;\ntype MenuActive = MenuProps['active'];\ntype MenuOnClick = MenuProps['onClick'];\ntype MenuRenderItem = MenuProps['renderItem'];\n\nconst homeIcon = (\n  <svg width='1em' height='1em' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M12.0218 2.00024L12.0602 2.00181C12.0752 2.00272 12.0902 2.00396 12.1052 2.00555C12.1245 2.00759 12.1439 2.01021 12.1632 2.0134C12.1834 2.01674 12.2037 2.02076 12.224 2.02541C12.2448 2.0302 12.2653 2.03563 12.2858 2.04174C12.3283 2.05443 12.3704 2.07012 12.4115 2.08874L12.5207 2.14669L12.6238 2.21913L22.6089 10.2191C23.617 11.0268 22.4745 12.5198 21.4564 11.8501L21.3614 11.7809L20.8121 11.3406C20.7259 11.2715 20.6001 11.2854 20.531 11.3716C20.5025 11.4071 20.487 11.4512 20.487 11.4967L20.4874 20C20.4874 21.4529 19.5572 22.0052 18.6068 21.9933L18.4903 22H5.50965C4.47075 22 3.51262 21 3.51262 20L3.51228 11.4968C3.51228 11.3864 3.42273 11.2968 3.31227 11.2968C3.26677 11.2968 3.22262 11.3124 3.18713 11.3408L2.63862 11.7809C1.63051 12.5886 0.426888 11.1445 1.3028 10.2968L1.39108 10.2191L11.3762 2.21913L11.4793 2.14669C11.4818 2.14511 11.4844 2.14354 11.487 2.14199L11.3762 2.21913C11.4218 2.18266 11.4697 2.15074 11.5194 2.12338C11.5462 2.10862 11.5735 2.09517 11.6013 2.08305C11.6177 2.0759 11.6343 2.06919 11.651 2.06295C11.6756 2.05379 11.7003 2.04564 11.7253 2.03849C11.7402 2.03424 11.7551 2.03033 11.7702 2.02678C11.7978 2.02024 11.8258 2.01488 11.8539 2.01072C11.8674 2.00874 11.8807 2.00705 11.894 2.00563C11.9258 2.00224 11.9579 2.00037 11.99 2C12.0004 2 12.0111 2 12.0218 2.00024ZM11.6874 4.53046L5.69668 9.32987C5.57823 9.42477 5.5093 9.56833 5.5093 9.72011L5.50964 19.5C5.50966 19.7761 5.73352 20 6.00965 20H8.00484C8.28097 20 8.50482 19.7761 8.50487 19.5L8.5052 14C8.5052 13.4872 8.89066 13.0645 9.38726 13.0067L9.4893 13.0008C9.49891 13.0003 9.50852 13 9.51814 13H14.4963C15.0478 13 15.4948 13.4477 15.4948 14L15.4945 19.5C15.4944 19.7761 15.7183 20 15.9944 20C15.9944 20.0001 15.9944 20 15.9944 20L17.9903 20C18.2665 20 18.4903 19.7761 18.4903 19.5V9.72009C18.4903 9.56833 18.4214 9.42478 18.303 9.32988L12.3126 4.53047C12.1299 4.38408 11.8701 4.38408 11.6874 4.53046ZM12.4978 15H11.5022C10.9499 15 10.5022 15.4477 10.5022 16V19.5C10.5022 19.7761 10.7261 20 11.0022 20H12.9978C13.2739 20 13.4978 19.7761 13.4978 19.5V16C13.4978 15.4477 13.0501 15 12.4978 15Z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nconst tagIcon = (\n  <svg width='1em' height='1em' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M13.9994 2.00219L19.7686 2.24C20.7799 2.28169 21.6007 3.07247 21.68 4.08162L22.1572 10.1534C22.203 10.7366 21.9912 11.3106 21.5775 11.7243L11.6922 21.6097C10.9111 22.3907 9.64478 22.3907 8.86373 21.6097L2.58579 15.3317C1.80474 14.5507 1.80474 13.2844 2.58579 12.5033L12.5028 2.58628C12.8981 2.19097 13.4408 1.97916 13.9994 2.00219ZM13.917 4.00049L4.70711 13.2104C4.31658 13.6009 4.31658 14.2341 4.70711 14.6246L9.57084 19.4884C9.96136 19.8789 10.5945 19.8789 10.9851 19.4884L20.1633 10.3101L19.7209 4.68044C19.7011 4.42816 19.4959 4.23046 19.2431 4.22004L13.917 4.00049ZM15.3854 5.83727C16.7661 5.83727 17.8854 6.95655 17.8854 8.33727C17.8854 9.71798 16.7661 10.8373 15.3854 10.8373C14.0047 10.8373 12.8854 9.71798 12.8854 8.33727C12.8854 6.95655 14.0047 5.83727 15.3854 5.83727ZM15.3854 7.83727C15.1093 7.83727 14.8854 8.06112 14.8854 8.33727C14.8854 8.61341 15.1093 8.83727 15.3854 8.83727C15.6615 8.83727 15.8854 8.61341 15.8854 8.33727C15.8854 8.06112 15.6615 7.83727 15.3854 7.83727Z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nconst githubIcon = (\n  <svg width='1em' height='1em' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M12.0011 2.00049C6.47548 1.9982 2 6.5931 2 12.2644C2 16.7492 4.79969 20.5614 8.69869 21.9615C9.22377 22.0969 9.14334 21.7136 9.14334 21.452V19.6732C6.11127 20.0381 5.98838 17.9771 5.78505 17.6328C5.37392 16.9121 4.40197 16.7285 4.69244 16.3842C5.38286 16.0193 6.08669 16.4761 6.90225 17.7131C7.49212 18.6106 8.64283 18.4591 9.22601 18.3099C9.35337 17.7705 9.62596 17.2885 10.0013 16.9144C6.85979 16.3361 5.55044 14.3668 5.55044 12.0257C5.55044 10.8896 5.91465 9.84534 6.62965 9.00302C6.17384 7.61445 6.6721 6.42555 6.73914 6.24883C8.03731 6.12948 9.38688 7.20361 9.4919 7.28853C10.2292 7.08426 11.0716 6.97639 12.0145 6.97639C12.9619 6.97639 13.8065 7.08885 14.5506 7.29542C14.803 7.09803 16.0543 6.17538 17.2609 6.28784C17.3257 6.46457 17.8128 7.62592 17.3838 8.99613C18.1077 9.84075 18.4764 10.8942 18.4764 12.0326C18.4764 14.3783 17.1581 16.3498 14.0076 16.919C14.5327 17.4515 14.8589 18.1905 14.8589 19.0076V21.5897C14.8768 21.7962 14.8589 22.0005 15.1941 22.0005C19.1512 20.6303 22 16.7905 22 12.2667C22 6.5931 17.5223 2.00049 12.0011 2.00049Z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nconst flagIcon = (\n  <svg width='1em' height='1em' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M20.8307 1.01559C21.0306 0.979794 21.224 1.00728 21.3942 1.08123C21.4003 1.08519 21.4073 1.08828 21.4143 1.09145C21.5175 1.13795 21.611 1.20233 21.6919 1.2799C21.697 1.28477 21.7021 1.28976 21.7072 1.29482L21.7221 1.31005C21.7996 1.39091 21.864 1.48449 21.9114 1.58697C21.9137 1.59469 21.9168 1.60169 21.9198 1.60872C22.0144 1.8233 22.0335 2.07618 21.9439 2.33228L21.9631 2.27191C21.9593 2.2857 21.9551 2.29942 21.9507 2.31306L21.9439 2.33228L15.2939 21.3323C14.9947 22.1871 13.8041 22.2357 13.4362 21.4081L9.79203 13.2089L1.59389 9.56574C0.805676 9.21542 0.812201 8.11879 1.55305 7.75669L1.66968 7.70807L20.6697 1.05807C20.6764 1.05573 20.683 1.05347 20.6897 1.05128C20.7026 1.04688 20.7163 1.04273 20.7301 1.03888C20.7588 1.03075 20.7868 1.02405 20.8147 1.01859C20.8176 1.01863 20.8206 1.01807 20.8236 1.01753L20.8307 1.01559ZM18.608 5.808L11.742 12.674L14.239 18.2909L18.608 5.808ZM17.195 4.391L4.71003 8.76193L10.327 11.259L17.195 4.391Z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nconst Icons: IconList = {\n  6: tagIcon,\n  1: homeIcon,\n  3: flagIcon,\n  2: githubIcon,\n};\n\nconst data: MenuItem[] = [\n  {\n    id: '1',\n    title: 'Navigation One',\n  },\n  {\n    id: '3',\n    title: 'Navigation Two',\n    children: [\n      {\n        id: '4',\n        title: 'Option 1',\n      },\n      {\n        id: '5',\n        title: 'Option 2',\n      },\n    ],\n  },\n  {\n    id: '6',\n    title: 'Navigation Three',\n    children: [\n      {\n        id: '7',\n        title: 'Option 3',\n      },\n      {\n        id: '8',\n        title: 'Option 4',\n        children: [\n          {\n            id: '9',\n            title: 'Option 1',\n          },\n          {\n            id: '10',\n            title: 'Option 2',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: '2',\n    title: 'Navigation Four',\n  },\n];\n\nconst App: React.FC = () => {\n  const [active, setActive] = useState(['1']);\n\n  const renderItem: MenuRenderItem = (da) => {\n    return da.title;\n  };\n\n  const renderIcon: MenuProps['renderIcon'] = (da) => {\n    if (da.title.startsWith('Navigation')) {\n      return Icons[Number(da.id)];\n    }\n    return null;\n  };\n\n  const handleClick: MenuOnClick = (d: MenuItem) => setActive([d.id]);\n\n  const checkActive: MenuActive = (d: MenuItem) => active.includes(d.id);\n\n  return (\n    <Menu\n      data={data}\n      renderIcon={renderIcon}\n      keygen='id'\n      mode='inline'\n      inlineIndent={22}\n      active={checkActive}\n      onClick={handleClick}\n      style={{ width: 256, border: '1px solid #e8ebf0' }}\n      defaultOpenKeys={['3']}\n      renderItem={renderItem}\n    />\n  );\n};\n\nexport default App;\n"
    },
    {
      "title": "Click",
      "description": "If the data item set the onClick event, this event is called. Otherwise, the onClick event defined by Menu is called",
      "code": "/**\n * cn - 点击事件\n *    -- 如果选项未设置单独的 onClick 事件，点击后会调用 Menu 定义的 onClick 事件\n * en - Click\n *    -- If the data item set the onClick event, this event is called. Otherwise, the onClick event defined by Menu is called\n */\nimport React, { useState } from 'react';\nimport { Menu, Message, TYPE } from 'shineout';\n\ninterface MenuItem {\n  id: string;\n  title: string;\n  children?: MenuItem[];\n}\ntype MenuProps = TYPE.Menu.Props<MenuItem, string>;\ntype MenuActive = MenuProps['active'];\ntype MenuOnClick = MenuProps['onClick'];\ntype MenuRenderItem = MenuProps['renderItem'];\n\nconst data: MenuItem[] = [\n  {\n    id: '1',\n    title: 'Navigation One',\n  },\n  {\n    id: '3',\n    title: 'Navigation Two',\n    children: [\n      {\n        id: '4',\n        title: 'Option 1',\n      },\n      {\n        id: '5',\n        title: 'Option 2',\n      },\n    ],\n  },\n  {\n    id: '6',\n    title: 'Navigation Three',\n    children: [\n      {\n        id: '7',\n        title: 'Option 3',\n      },\n      {\n        id: '8',\n        title: 'Option 4',\n        children: [\n          {\n            id: '9',\n            title: 'Option 1',\n          },\n          {\n            id: '10',\n            title: 'Option 2',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: '2',\n    title: 'Navigation Four',\n  },\n];\n\nconst App: React.FC = () => {\n  const [active, setActive] = useState(['1']);\n\n  const renderItem: MenuRenderItem = (d: MenuItem) => d.title;\n\n  const handleClick: MenuOnClick = (d: MenuItem) => {\n    Message.info(`now select is ${d.title}`);\n    setActive([d.id]);\n  };\n\n  const checkActive: MenuActive = (d: MenuItem) => active.includes(d.id);\n\n  return (\n    <Menu\n      keygen='id'\n      data={data}\n      mode='inline'\n      inlineIndent={14}\n      active={checkActive}\n      onClick={handleClick}\n      style={{ width: 256, border: '1px solid #e8ebf0' }}\n      defaultOpenKeys={['3']}\n      renderItem={renderItem}\n    />\n  );\n};\n\nexport default App;\n"
    },
    {
      "title": "Horizontal",
      "description": "Set mode to \"horizontal\" to display it as horizontal layout (submenu pops up on the right)",
      "code": "/**\n * cn - 水平布局\n *    -- 设置 mode 为 \"horizontal\"，显示为水平布局（子菜单在右侧弹出）\n * en - Horizontal\n *    -- Set mode to \"horizontal\" to display it as horizontal layout (submenu pops up on the right)\n */\nimport React, { useState } from 'react';\nimport { Menu, TYPE } from 'shineout';\n\ninterface MenuItem {\n  id: string;\n  title: string;\n  children?: MenuItem[];\n}\ntype MenuProps = TYPE.Menu.Props<MenuItem, any>;\ntype MenuActive = MenuProps['active'];\ntype MenuOnClick = MenuProps['onClick'];\ntype MenuRenderItem = MenuProps['renderItem'];\n\nconst data: MenuItem[] = [\n  {\n    id: '1',\n    title: 'Navigation One',\n  },\n  {\n    id: '3',\n    title: 'Navigation Two',\n    children: [\n      {\n        id: '4',\n        title: 'Option 1',\n        children: [\n          {\n            id: '9',\n            title: 'Option 1',\n          },\n          {\n            id: '10',\n            title: 'Option 2',\n          },\n        ],\n      },\n      {\n        id: '5',\n        title: 'Option 2',\n      },\n    ],\n  },\n  {\n    id: '6',\n    title: 'Navigation Three',\n    children: [\n      {\n        id: '7',\n        title: 'Option 3',\n      },\n      {\n        id: '8',\n        title: 'Option 4',\n      },\n    ],\n  },\n  {\n    id: '2',\n    title: 'Navigation Four',\n  },\n];\n\nconst App: React.FC = () => {\n  const [active, setActive] = useState(['1']);\n\n  const renderItem: MenuRenderItem = (d: MenuItem) => d.title;\n\n  const handleClick: MenuOnClick = (d: MenuItem) => setActive([d.id]);\n\n  const checkActive: MenuActive = (d: MenuItem) => active.includes(d.id);\n\n  return (\n    <Menu\n      data={data}\n      keygen='id'\n      mode='horizontal'\n      inlineIndent={14}\n      active={checkActive}\n      onClick={handleClick}\n      renderItem={renderItem}\n    />\n  );\n};\n\nexport default App;\n"
    },
    {
      "title": "Vertical",
      "description": "Set mode to \"vertical\" to display it as vertical layout",
      "code": "/**\n * cn - 垂直样式\n *    -- 设置 mode 为 \"vertical\"，显示为垂直布局\n *    -- 设置 mode 为 \"vertical-auto\" 可以自动选择弹出方向（上下）\n * en - Vertical\n *    -- Set mode to \"vertical\" to display it as vertical layout\n *    -- set 'vertical-auto' auto popup position\n */\nimport React, { useState } from 'react';\nimport { Menu, TYPE } from 'shineout';\n\ninterface MenuItem {\n  id: string;\n  title: string;\n  onClick?: boolean;\n  children?: MenuItem[];\n}\ntype MenuProps = TYPE.Menu.Props<MenuItem, string>;\ntype MenuActive = MenuProps['active'];\ntype MenuOnClick = MenuProps['onClick'];\ntype MenuRenderItem = MenuProps['renderItem'];\n\nconst data: MenuItem[] = [\n  {\n    id: '1',\n    title: 'Navigation One',\n  },\n  {\n    id: '3',\n    title: 'Navigation Two',\n    onClick: true,\n    children: [\n      {\n        id: '4',\n        title: 'Option 1',\n      },\n      {\n        id: '5',\n        title: 'Option 2',\n      },\n    ],\n  },\n  {\n    id: '21',\n    title: 'Navigation 21',\n  },\n  {\n    id: '22',\n    title: 'Navigation 22',\n  },\n  {\n    id: '23',\n    title: 'Navigation 23',\n  },\n  {\n    id: '24',\n    title: 'Navigation 24',\n  },\n  {\n    id: '25',\n    title: 'Navigation 25',\n  },\n  {\n    id: '26',\n    title: 'Navigation 26',\n  },\n  {\n    id: '27',\n    title: 'Navigation 27',\n  },\n  {\n    id: '28',\n    title: 'Navigation 28',\n  },\n  {\n    id: '29',\n    title: 'Navigation 29',\n  },\n  {\n    id: '30',\n    title: 'Navigation 30',\n    children: [\n      {\n        id: '7',\n        title: 'Option 3',\n      },\n      {\n        id: '8',\n        title: 'Option 4',\n        children: [\n          {\n            id: '9',\n            title: 'Option 1',\n          },\n          {\n            id: '10',\n            title: 'Option 2',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: '31',\n    title: 'Navigation 31',\n  },\n  {\n    id: '32',\n    title: 'Navigation 32',\n  },\n  {\n    id: '33',\n    title: 'Navigation 33',\n  },\n];\n\nconst App: React.FC = () => {\n  const [active, setActive] = useState(['1']);\n\n  const renderItem: MenuRenderItem = (d: MenuItem) => d.title;\n\n  const handleClick: MenuOnClick = (d: MenuItem) => setActive([d.id]);\n\n  const checkActive: MenuActive = (d: MenuItem) => active.includes(d.id);\n\n  return (\n    <Menu\n      data={data}\n      keygen='id'\n      mode='vertical-auto'\n      inlineIndent={14}\n      active={checkActive}\n      onClick={handleClick}\n      renderItem={renderItem}\n      style={{ width: 256, height: 300, border: '1px solid #e8ebf0' }}\n    />\n  );\n};\n\nexport default App;\n"
    },
    {
      "title": "Dark theme",
      "description": "The dark theme",
      "code": "/**\n * cn - 暗系主题\n *    -- 内置了一个暗色的主题，通过 theme 使用\n * en - Dark theme\n *    -- The dark theme\n */\nimport React, { useState } from 'react';\nimport { Menu, Radio, TYPE } from 'shineout';\n\ninterface MenuItem {\n  id: string;\n  title: string;\n  children?: MenuItem[];\n}\ntype MenuProps = TYPE.Menu.Props<MenuItem, string>;\ntype MenuActive = MenuProps['active'];\ntype MenuOnClick = MenuProps['onClick'];\ntype MenuRenderItem = MenuProps['renderItem'];\n\nconst data: MenuItem[] = [\n  {\n    id: '1',\n    title: 'Navigation One',\n  },\n  {\n    id: '3',\n    title: 'Navigation Two',\n    children: [\n      {\n        id: '4',\n        title: 'Option 1',\n      },\n      {\n        id: '5',\n        title: 'Option 2',\n      },\n    ],\n  },\n  {\n    id: '6',\n    title: 'Navigation Three',\n    children: [\n      {\n        id: '7',\n        title: 'Option 3',\n      },\n      {\n        id: '8',\n        title: 'Option 4',\n        children: [\n          {\n            id: '9',\n            title: 'Option 1',\n          },\n          {\n            id: '10',\n            title: 'Option 2',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: '2',\n    title: 'Navigation Four',\n  },\n];\nconst modeArr = ['inline', 'vertical', 'horizontal'];\n\nconst App: React.FC = () => {\n  const [active, setActive] = useState(['1']);\n  const [mode, seMode] = useState<MenuProps['mode']>('inline');\n\n  const renderItem: MenuRenderItem = (d: MenuItem) => d.title;\n\n  const handleClick: MenuOnClick = (d: MenuItem) => setActive([d.id]);\n\n  const checkActive: MenuActive = (d: MenuItem) => active.includes(d.id);\n\n  return (\n    <div>\n      <Radio.Group button={'outline'} size='small' style={{marginBlock: 12}} data={modeArr} keygen value={mode} onChange={seMode} />\n      <Menu\n        mode={mode}\n        key={mode}\n        data={data}\n        disabled={(d) => d.id === '2'}\n        keygen='id'\n        inlineIndent={14}\n        theme='dark'\n        active={checkActive}\n        onClick={handleClick}\n        style={mode === 'horizontal' ? {} : { width: 256 }}\n        renderItem={renderItem}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"
    },
    {
      "title": "Collapse",
      "description": "Set `collapse` to control the menu collapse",
      "code": "/**\n * cn - 折叠菜单\n *    -- 通过设置 `collapse` 来控制菜单折叠\n * en - Collapse\n *    -- Set `collapse` to control the menu collapse\n */\n\nimport React, { useState } from 'react';\nimport { Menu, Button, TYPE } from 'shineout';\n\ninterface MenuItem {\n  id: string;\n  title: string;\n  children?: MenuItem[];\n}\ntype MenuProps = TYPE.Menu.Props<MenuItem, string>;\ntype MenuActive = MenuProps['active'];\ntype MenuRenderItem = MenuProps['renderItem'];\n\nconst data: MenuItem[] = [\n  {\n    id: '1',\n    title: 'Navigation One',\n  },\n  {\n    id: '3',\n    title: 'Navigation Two',\n    children: [\n      {\n        id: '4',\n        title: 'Option 1',\n      },\n      {\n        id: '5',\n        title: 'Option 2',\n      },\n    ],\n  },\n  {\n    id: '6',\n    title: 'Navigation Three',\n    children: [\n      {\n        id: '7',\n        title: 'Option 3',\n      },\n      {\n        id: '8',\n        title: 'Option 4',\n        children: [\n          {\n            id: '9',\n            title: 'Option 1',\n          },\n          {\n            id: '10',\n            title: 'Option 2',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: '2',\n    title: 'Navigation Four',\n  },\n  {\n    id: '11',\n    title: 'Navigation Five',\n  },\n];\n\nconst homeIcon = (\n  <svg width='1em' height='1em' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M12.0218 2.00024L12.0602 2.00181C12.0752 2.00272 12.0902 2.00396 12.1052 2.00555C12.1245 2.00759 12.1439 2.01021 12.1632 2.0134C12.1834 2.01674 12.2037 2.02076 12.224 2.02541C12.2448 2.0302 12.2653 2.03563 12.2858 2.04174C12.3283 2.05443 12.3704 2.07012 12.4115 2.08874L12.5207 2.14669L12.6238 2.21913L22.6089 10.2191C23.617 11.0268 22.4745 12.5198 21.4564 11.8501L21.3614 11.7809L20.8121 11.3406C20.7259 11.2715 20.6001 11.2854 20.531 11.3716C20.5025 11.4071 20.487 11.4512 20.487 11.4967L20.4874 20C20.4874 21.4529 19.5572 22.0052 18.6068 21.9933L18.4903 22H5.50965C4.47075 22 3.51262 21 3.51262 20L3.51228 11.4968C3.51228 11.3864 3.42273 11.2968 3.31227 11.2968C3.26677 11.2968 3.22262 11.3124 3.18713 11.3408L2.63862 11.7809C1.63051 12.5886 0.426888 11.1445 1.3028 10.2968L1.39108 10.2191L11.3762 2.21913L11.4793 2.14669C11.4818 2.14511 11.4844 2.14354 11.487 2.14199L11.3762 2.21913C11.4218 2.18266 11.4697 2.15074 11.5194 2.12338C11.5462 2.10862 11.5735 2.09517 11.6013 2.08305C11.6177 2.0759 11.6343 2.06919 11.651 2.06295C11.6756 2.05379 11.7003 2.04564 11.7253 2.03849C11.7402 2.03424 11.7551 2.03033 11.7702 2.02678C11.7978 2.02024 11.8258 2.01488 11.8539 2.01072C11.8674 2.00874 11.8807 2.00705 11.894 2.00563C11.9258 2.00224 11.9579 2.00037 11.99 2C12.0004 2 12.0111 2 12.0218 2.00024ZM11.6874 4.53046L5.69668 9.32987C5.57823 9.42477 5.5093 9.56833 5.5093 9.72011L5.50964 19.5C5.50966 19.7761 5.73352 20 6.00965 20H8.00484C8.28097 20 8.50482 19.7761 8.50487 19.5L8.5052 14C8.5052 13.4872 8.89066 13.0645 9.38726 13.0067L9.4893 13.0008C9.49891 13.0003 9.50852 13 9.51814 13H14.4963C15.0478 13 15.4948 13.4477 15.4948 14L15.4945 19.5C15.4944 19.7761 15.7183 20 15.9944 20C15.9944 20.0001 15.9944 20 15.9944 20L17.9903 20C18.2665 20 18.4903 19.7761 18.4903 19.5V9.72009C18.4903 9.56833 18.4214 9.42478 18.303 9.32988L12.3126 4.53047C12.1299 4.38408 11.8701 4.38408 11.6874 4.53046ZM12.4978 15H11.5022C10.9499 15 10.5022 15.4477 10.5022 16V19.5C10.5022 19.7761 10.7261 20 11.0022 20H12.9978C13.2739 20 13.4978 19.7761 13.4978 19.5V16C13.4978 15.4477 13.0501 15 12.4978 15Z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nconst tagIcon = (\n  <svg width='1em' height='1em' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M13.9994 2.00219L19.7686 2.24C20.7799 2.28169 21.6007 3.07247 21.68 4.08162L22.1572 10.1534C22.203 10.7366 21.9912 11.3106 21.5775 11.7243L11.6922 21.6097C10.9111 22.3907 9.64478 22.3907 8.86373 21.6097L2.58579 15.3317C1.80474 14.5507 1.80474 13.2844 2.58579 12.5033L12.5028 2.58628C12.8981 2.19097 13.4408 1.97916 13.9994 2.00219ZM13.917 4.00049L4.70711 13.2104C4.31658 13.6009 4.31658 14.2341 4.70711 14.6246L9.57084 19.4884C9.96136 19.8789 10.5945 19.8789 10.9851 19.4884L20.1633 10.3101L19.7209 4.68044C19.7011 4.42816 19.4959 4.23046 19.2431 4.22004L13.917 4.00049ZM15.3854 5.83727C16.7661 5.83727 17.8854 6.95655 17.8854 8.33727C17.8854 9.71798 16.7661 10.8373 15.3854 10.8373C14.0047 10.8373 12.8854 9.71798 12.8854 8.33727C12.8854 6.95655 14.0047 5.83727 15.3854 5.83727ZM15.3854 7.83727C15.1093 7.83727 14.8854 8.06112 14.8854 8.33727C14.8854 8.61341 15.1093 8.83727 15.3854 8.83727C15.6615 8.83727 15.8854 8.61341 15.8854 8.33727C15.8854 8.06112 15.6615 7.83727 15.3854 7.83727Z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nconst githubIcon = (\n  <svg width='1em' height='1em' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M12.0011 2.00049C6.47548 1.9982 2 6.5931 2 12.2644C2 16.7492 4.79969 20.5614 8.69869 21.9615C9.22377 22.0969 9.14334 21.7136 9.14334 21.452V19.6732C6.11127 20.0381 5.98838 17.9771 5.78505 17.6328C5.37392 16.9121 4.40197 16.7285 4.69244 16.3842C5.38286 16.0193 6.08669 16.4761 6.90225 17.7131C7.49212 18.6106 8.64283 18.4591 9.22601 18.3099C9.35337 17.7705 9.62596 17.2885 10.0013 16.9144C6.85979 16.3361 5.55044 14.3668 5.55044 12.0257C5.55044 10.8896 5.91465 9.84534 6.62965 9.00302C6.17384 7.61445 6.6721 6.42555 6.73914 6.24883C8.03731 6.12948 9.38688 7.20361 9.4919 7.28853C10.2292 7.08426 11.0716 6.97639 12.0145 6.97639C12.9619 6.97639 13.8065 7.08885 14.5506 7.29542C14.803 7.09803 16.0543 6.17538 17.2609 6.28784C17.3257 6.46457 17.8128 7.62592 17.3838 8.99613C18.1077 9.84075 18.4764 10.8942 18.4764 12.0326C18.4764 14.3783 17.1581 16.3498 14.0076 16.919C14.5327 17.4515 14.8589 18.1905 14.8589 19.0076V21.5897C14.8768 21.7962 14.8589 22.0005 15.1941 22.0005C19.1512 20.6303 22 16.7905 22 12.2667C22 6.5931 17.5223 2.00049 12.0011 2.00049Z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nconst flagIcon = (\n  <svg width='1em' height='1em' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M20.8307 1.01559C21.0306 0.979794 21.224 1.00728 21.3942 1.08123C21.4003 1.08519 21.4073 1.08828 21.4143 1.09145C21.5175 1.13795 21.611 1.20233 21.6919 1.2799C21.697 1.28477 21.7021 1.28976 21.7072 1.29482L21.7221 1.31005C21.7996 1.39091 21.864 1.48449 21.9114 1.58697C21.9137 1.59469 21.9168 1.60169 21.9198 1.60872C22.0144 1.8233 22.0335 2.07618 21.9439 2.33228L21.9631 2.27191C21.9593 2.2857 21.9551 2.29942 21.9507 2.31306L21.9439 2.33228L15.2939 21.3323C14.9947 22.1871 13.8041 22.2357 13.4362 21.4081L9.79203 13.2089L1.59389 9.56574C0.805676 9.21542 0.812201 8.11879 1.55305 7.75669L1.66968 7.70807L20.6697 1.05807C20.6764 1.05573 20.683 1.05347 20.6897 1.05128C20.7026 1.04688 20.7163 1.04273 20.7301 1.03888C20.7588 1.03075 20.7868 1.02405 20.8147 1.01859C20.8176 1.01863 20.8206 1.01807 20.8236 1.01753L20.8307 1.01559ZM18.608 5.808L11.742 12.674L14.239 18.2909L18.608 5.808ZM17.195 4.391L4.71003 8.76193L10.327 11.259L17.195 4.391Z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nconst IMenu = ({ theme }: { theme: MenuProps['theme'] }) => {\n  const [active, setActive] = useState('10');\n  const [collapse, setCollapse] = useState(false);\n\n  const handleClick = (d: MenuItem) => setActive(d.id);\n\n  const renderItem: MenuRenderItem = (d: MenuItem) => {\n    return d.title;\n  };\n\n  interface IconList {\n    [x: number]: React.ReactNode;\n  }\n  const Icons: IconList = {\n    6: tagIcon,\n    1: homeIcon,\n    3: flagIcon,\n    2: githubIcon,\n    11: tagIcon,\n  };\n\n  const renderIcon: MenuProps['renderIcon'] = (da) => {\n    if (da.title.startsWith('Navigation')) {\n      return Icons[Number(da.id)];\n    }\n    return null;\n  };\n\n  const checkActive: MenuActive = (d: MenuItem) => active === d.id;\n\n  return (\n    <div>\n      <div style={{ marginBottom: 12 }}>\n        <Button type='primary' onClick={() => setCollapse(!collapse)} style={{ height: 32 }}>\n          {collapse ? (\n            <svg\n              viewBox='64 64 896 896'\n              focusable='false'\n              data-icon='menu-unfold'\n              width='1em'\n              height='1em'\n              fill='currentColor'\n              aria-hidden='true'\n            >\n              <path d='M408 442h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm-8 204c0 4.4 3.6 8 8 8h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56zm504-486H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 632H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM142.4 642.1L298.7 519a8.84 8.84 0 000-13.9L142.4 381.9c-5.8-4.6-14.4-.5-14.4 6.9v246.3a8.9 8.9 0 0014.4 7z'></path>\n            </svg>\n          ) : (\n            <svg\n              viewBox='64 64 896 896'\n              focusable='false'\n              data-icon='menu-fold'\n              width='1em'\n              height='1em'\n              fill='currentColor'\n              aria-hidden='true'\n            >\n              <path d='M408 442h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm-8 204c0 4.4 3.6 8 8 8h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56zm504-486H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 632H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM115.4 518.9L271.7 642c5.8 4.6 14.4.5 14.4-6.9V388.9c0-7.4-8.5-11.5-14.4-6.9L115.4 505.1a8.74 8.74 0 000 13.8z'></path>\n            </svg>\n          )}\n        </Button>\n      </div>\n\n      <div style={{ border: '1px solid #ebebeb', float: 'left' }}>\n        <Menu\n          style={{ width: 200 }}\n          key={theme}\n          theme={theme}\n          keygen='id'\n          collapse={collapse}\n          data={data}\n          disabled={(d) => d.id === '1'}\n          inlineIndent={22}\n          active={checkActive}\n          onClick={handleClick}\n          renderItem={renderItem}\n          renderIcon={renderIcon}\n        />\n      </div>\n    </div>\n  );\n};\nconst App: React.FC = () => {\n  return (\n    <div style={{ display: 'flex', gap: 32 }}>\n      <IMenu theme='light' />\n      <IMenu theme='dark' />\n    </div>\n  );\n};\n\nexport default App;\n"
    },
    {
      "title": "Header",
      "description": "Set `header` to customize the header content.",
      "code": "/**\n * cn - 自定义顶部\n *    -- 通过设置 `header` 来自定义顶部内容\n * en - Header\n *    -- Set `header` to customize the header content.\n */\n\nimport React, { useState } from 'react';\nimport { Menu, Button, TYPE, Switch } from 'shineout';\n\ninterface MenuItem {\n  id: string;\n  title: string;\n  children?: MenuItem[];\n}\ntype MenuProps = TYPE.Menu.Props<MenuItem, string>;\ntype MenuActive = MenuProps['active'];\ntype MenuRenderItem = MenuProps['renderItem'];\n\nconst data: MenuItem[] = [\n  {\n    id: '1',\n    title: 'Navigation One',\n  },\n  {\n    id: '2',\n    title: 'Navigation Two',\n    children: [\n      {\n        id: '2-1',\n        title: 'Option 1',\n      },\n      {\n        id: '2-2',\n        title: 'Option 2',\n      },\n    ],\n  },\n  {\n    id: '3',\n    title: 'Navigation Three',\n    children: [\n      {\n        id: '3-1',\n        title: 'Option 1',\n        children: [\n          {\n            id: '3-1-1',\n            title: 'Option 1-1',\n          },\n          {\n            id: '3-1-2',\n            title: 'Option 1-2',\n          },\n        ],\n      },\n      {\n        id: '3-2',\n        title: 'Option 2',\n        children: [\n          {\n            id: '3-2-1',\n            title: 'Option 2-1',\n          },\n          {\n            id: '3-2-2',\n            title: 'Option 2-2',\n          },\n        ],\n      },\n      {\n        id: '3-3',\n        title: 'Option 2',\n        children: [\n          {\n            id: '3-3-1',\n            title: 'Option 2-1',\n          },\n          {\n            id: '3-3-2',\n            title: 'Option 2-2',\n          },\n        ],\n      },\n    ],\n  },\n  {\n    id: '4',\n    title: 'Navigation Four',\n  },\n  {\n    id: '5',\n    title: 'Navigation Five',\n  },\n];\n\nconst homeIcon = (\n  <svg width='1em' height='1em' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M12.0218 2.00024L12.0602 2.00181C12.0752 2.00272 12.0902 2.00396 12.1052 2.00555C12.1245 2.00759 12.1439 2.01021 12.1632 2.0134C12.1834 2.01674 12.2037 2.02076 12.224 2.02541C12.2448 2.0302 12.2653 2.03563 12.2858 2.04174C12.3283 2.05443 12.3704 2.07012 12.4115 2.08874L12.5207 2.14669L12.6238 2.21913L22.6089 10.2191C23.617 11.0268 22.4745 12.5198 21.4564 11.8501L21.3614 11.7809L20.8121 11.3406C20.7259 11.2715 20.6001 11.2854 20.531 11.3716C20.5025 11.4071 20.487 11.4512 20.487 11.4967L20.4874 20C20.4874 21.4529 19.5572 22.0052 18.6068 21.9933L18.4903 22H5.50965C4.47075 22 3.51262 21 3.51262 20L3.51228 11.4968C3.51228 11.3864 3.42273 11.2968 3.31227 11.2968C3.26677 11.2968 3.22262 11.3124 3.18713 11.3408L2.63862 11.7809C1.63051 12.5886 0.426888 11.1445 1.3028 10.2968L1.39108 10.2191L11.3762 2.21913L11.4793 2.14669C11.4818 2.14511 11.4844 2.14354 11.487 2.14199L11.3762 2.21913C11.4218 2.18266 11.4697 2.15074 11.5194 2.12338C11.5462 2.10862 11.5735 2.09517 11.6013 2.08305C11.6177 2.0759 11.6343 2.06919 11.651 2.06295C11.6756 2.05379 11.7003 2.04564 11.7253 2.03849C11.7402 2.03424 11.7551 2.03033 11.7702 2.02678C11.7978 2.02024 11.8258 2.01488 11.8539 2.01072C11.8674 2.00874 11.8807 2.00705 11.894 2.00563C11.9258 2.00224 11.9579 2.00037 11.99 2C12.0004 2 12.0111 2 12.0218 2.00024ZM11.6874 4.53046L5.69668 9.32987C5.57823 9.42477 5.5093 9.56833 5.5093 9.72011L5.50964 19.5C5.50966 19.7761 5.73352 20 6.00965 20H8.00484C8.28097 20 8.50482 19.7761 8.50487 19.5L8.5052 14C8.5052 13.4872 8.89066 13.0645 9.38726 13.0067L9.4893 13.0008C9.49891 13.0003 9.50852 13 9.51814 13H14.4963C15.0478 13 15.4948 13.4477 15.4948 14L15.4945 19.5C15.4944 19.7761 15.7183 20 15.9944 20C15.9944 20.0001 15.9944 20 15.9944 20L17.9903 20C18.2665 20 18.4903 19.7761 18.4903 19.5V9.72009C18.4903 9.56833 18.4214 9.42478 18.303 9.32988L12.3126 4.53047C12.1299 4.38408 11.8701 4.38408 11.6874 4.53046ZM12.4978 15H11.5022C10.9499 15 10.5022 15.4477 10.5022 16V19.5C10.5022 19.7761 10.7261 20 11.0022 20H12.9978C13.2739 20 13.4978 19.7761 13.4978 19.5V16C13.4978 15.4477 13.0501 15 12.4978 15Z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nconst tagIcon = (\n  <svg width='1em' height='1em' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M13.9994 2.00219L19.7686 2.24C20.7799 2.28169 21.6007 3.07247 21.68 4.08162L22.1572 10.1534C22.203 10.7366 21.9912 11.3106 21.5775 11.7243L11.6922 21.6097C10.9111 22.3907 9.64478 22.3907 8.86373 21.6097L2.58579 15.3317C1.80474 14.5507 1.80474 13.2844 2.58579 12.5033L12.5028 2.58628C12.8981 2.19097 13.4408 1.97916 13.9994 2.00219ZM13.917 4.00049L4.70711 13.2104C4.31658 13.6009 4.31658 14.2341 4.70711 14.6246L9.57084 19.4884C9.96136 19.8789 10.5945 19.8789 10.9851 19.4884L20.1633 10.3101L19.7209 4.68044C19.7011 4.42816 19.4959 4.23046 19.2431 4.22004L13.917 4.00049ZM15.3854 5.83727C16.7661 5.83727 17.8854 6.95655 17.8854 8.33727C17.8854 9.71798 16.7661 10.8373 15.3854 10.8373C14.0047 10.8373 12.8854 9.71798 12.8854 8.33727C12.8854 6.95655 14.0047 5.83727 15.3854 5.83727ZM15.3854 7.83727C15.1093 7.83727 14.8854 8.06112 14.8854 8.33727C14.8854 8.61341 15.1093 8.83727 15.3854 8.83727C15.6615 8.83727 15.8854 8.61341 15.8854 8.33727C15.8854 8.06112 15.6615 7.83727 15.3854 7.83727Z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nconst githubIcon = (\n  <svg width='1em' height='1em' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M12.0011 2.00049C6.47548 1.9982 2 6.5931 2 12.2644C2 16.7492 4.79969 20.5614 8.69869 21.9615C9.22377 22.0969 9.14334 21.7136 9.14334 21.452V19.6732C6.11127 20.0381 5.98838 17.9771 5.78505 17.6328C5.37392 16.9121 4.40197 16.7285 4.69244 16.3842C5.38286 16.0193 6.08669 16.4761 6.90225 17.7131C7.49212 18.6106 8.64283 18.4591 9.22601 18.3099C9.35337 17.7705 9.62596 17.2885 10.0013 16.9144C6.85979 16.3361 5.55044 14.3668 5.55044 12.0257C5.55044 10.8896 5.91465 9.84534 6.62965 9.00302C6.17384 7.61445 6.6721 6.42555 6.73914 6.24883C8.03731 6.12948 9.38688 7.20361 9.4919 7.28853C10.2292 7.08426 11.0716 6.97639 12.0145 6.97639C12.9619 6.97639 13.8065 7.08885 14.5506 7.29542C14.803 7.09803 16.0543 6.17538 17.2609 6.28784C17.3257 6.46457 17.8128 7.62592 17.3838 8.99613C18.1077 9.84075 18.4764 10.8942 18.4764 12.0326C18.4764 14.3783 17.1581 16.3498 14.0076 16.919C14.5327 17.4515 14.8589 18.1905 14.8589 19.0076V21.5897C14.8768 21.7962 14.8589 22.0005 15.1941 22.0005C19.1512 20.6303 22 16.7905 22 12.2667C22 6.5931 17.5223 2.00049 12.0011 2.00049Z'\n      fill='currentColor'\n    />\n  </svg>\n);\n\nconst flagIcon = (\n  <svg width='1em' height='1em' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'>\n    <path\n      d='M20.8307 1.01559C21.0306 0.979794 21.224 1.00728 21.3942 1.08123C21.4003 1.08519 21.4073 1.08828 21.4143 1.09145C21.5175 1.13795 21.611 1.20233 21.6919 1.2799C21.697 1.28477 21.7021 1.28976 21.7072 1.29482L21.7221 1.31005C21.7996 1.39091 21.864 1.48449 21.9114 1.58697C21.9137 1.59469 21.9168 1.60169 21.9198 1.60872C22.0144 1.8233 22.0335 2.07618 21.9439 2.33228L21.9631 2.27191C21.9593 2.2857 21.9551 2.29942 21.9507 2.31306L21.9439 2.33228L15.2939 21.3323C14.9947 22.1871 13.8041 22.2357 13.4362 21.4081L9.79203 13.2089L1.59389 9.56574C0.805676 9.21542 0.812201 8.11879 1.55305 7.75669L1.66968 7.70807L20.6697 1.05807C20.6764 1.05573 20.683 1.05347 20.6897 1.05128C20.7026 1.04688 20.7163 1.04273 20.7301 1.03888C20.7588 1.03075 20.7868 1.02405 20.8147 1.01859C20.8176 1.01863 20.8206 1.01807 20.8236 1.01753L20.8307 1.01559ZM18.608 5.808L11.742 12.674L14.239 18.2909L18.608 5.808ZM17.195 4.391L4.71003 8.76193L10.327 11.259L17.195 4.391Z'\n      fill='currentColor'\n    />\n  </svg>\n);\nconst IMenu = (props: { theme: MenuProps['theme'] }) => {\n  const { theme } = props;\n  const [active, setActive] = useState('10');\n  const [collapse, setCollapse] = useState(false);\n  const [dis, setDis] = useState(false);\n\n  const handleClick = (d: MenuItem) => setActive(d.id);\n\n  const renderItem: MenuRenderItem = (d: MenuItem) => {\n    return d.title;\n  };\n\n  interface IconList {\n    [x: number]: React.ReactNode;\n  }\n  const Icons: IconList = {\n    1: homeIcon,\n    2: flagIcon,\n    3: tagIcon,\n    4: githubIcon,\n    5: tagIcon,\n  };\n\n  const renderIcon: MenuProps['renderIcon'] = (da) => {\n    if (da.title.startsWith('Navigation')) {\n      return Icons[Number(da.id)];\n    }\n    return null;\n  };\n\n  const checkActive: MenuActive = (d: MenuItem) => active === d.id;\n\n  return (\n    <div>\n      <div style={{ marginBottom: 12 }}>\n        <Button\n          type='primary'\n          style={{ marginInlineEnd: 12, height: 32 }}\n          onClick={() => setCollapse(!collapse)}\n        >\n          {collapse ? (\n            <svg\n              viewBox='64 64 896 896'\n              focusable='false'\n              data-icon='menu-unfold'\n              width='1em'\n              height='1em'\n              fill='currentColor'\n              aria-hidden='true'\n            >\n              <path d='M408 442h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm-8 204c0 4.4 3.6 8 8 8h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56zm504-486H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 632H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM142.4 642.1L298.7 519a8.84 8.84 0 000-13.9L142.4 381.9c-5.8-4.6-14.4-.5-14.4 6.9v246.3a8.9 8.9 0 0014.4 7z'></path>\n            </svg>\n          ) : (\n            <svg\n              viewBox='64 64 896 896'\n              focusable='false'\n              data-icon='menu-fold'\n              width='1em'\n              height='1em'\n              fill='currentColor'\n              aria-hidden='true'\n            >\n              <path d='M408 442h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8zm-8 204c0 4.4 3.6 8 8 8h480c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H408c-4.4 0-8 3.6-8 8v56zm504-486H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zm0 632H120c-4.4 0-8 3.6-8 8v56c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8zM115.4 518.9L271.7 642c5.8 4.6 14.4.5 14.4-6.9V388.9c0-7.4-8.5-11.5-14.4-6.9L115.4 505.1a8.74 8.74 0 000 13.8z'></path>\n            </svg>\n          )}\n        </Button>\n        <Switch value={dis} onChange={setDis} content={['disabled', 'effect']} />\n      </div>\n      <div style={{ border: '1px solid #ebebeb', float: 'left' }}>\n        <Menu\n          key={theme}\n          header={\n            <>\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                }}\n              >\n                <div\n                  style={{\n                    width: '28px',\n                    height: '28px',\n                    background: 'var(--soui-button-primary-background-color,var(--soui-brand-6,#197AFA))',\n                    borderRadius: '4px',\n                    textAlign: 'center',\n                    color: '#fff',\n                    lineHeight: '28px',\n                    fontWeight: '500',\n                    fontSize: '14',\n                    fontFamily: 'PingFang SC',\n                    flexShrink: 0,\n                  }}\n                >\n                  S\n                </div>\n                {collapse ? null : (\n                  <div style={{ marginInlineStart: '12px', fontSize: '16px', fontWeight: 500 }}>\n                    System Name\n                  </div>\n                )}\n              </div>\n              <div style={{ marginTop: 12 }}>\n                <Menu.Search\n                  onSearchClick={() => {\n                    if (collapse) setCollapse(false);\n                  }}\n                  disabled={dis}\n                  collapse={collapse}\n                  theme={theme}\n                  placeholder='请输入关键字'\n                  clearable\n                  style={{ marginBottom: '3px' }}\n                />\n              </div>\n            </>\n          }\n          theme={theme}\n          style={{ width: 200 }}\n          keygen='id'\n          collapse={collapse}\n          data={data}\n          disabled={(d) => d.id === '1'}\n          inlineIndent={22}\n          active={checkActive}\n          onClick={handleClick}\n          renderItem={renderItem}\n          renderIcon={renderIcon}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst App = () => {\n  return (\n    <div style={{ display: 'flex', gap: 24 }}>\n      <IMenu theme='light' />\n      <IMenu theme='dark' />\n    </div>\n  );\n};\n\nexport default App;\n"
    }
  ],
  "subComponents": [],
  "version": "3.7.10-beta.3",
  "notes": {},
  "apiSummary": {
    "totalProps": 24,
    "requiredProps": 1,
    "propsWithWhen": 0,
    "examplesCount": 13
  }
}