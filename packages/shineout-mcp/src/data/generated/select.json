{
  "name": "Select",
  "description": "用于收纳大量选项的信息录入类组件",
  "category": "other",
  "importPath": "import { Select } from 'shineout'",
  "props": [
    {
      "name": "filterSameChange",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "当两次选择的值相同时不触发 onChange"
    },
    {
      "name": "value",
      "type": "any",
      "required": false,
      "description": "选中的值。在表单中使用时，此属性由表单管理。注意：请勿使用 undefined 或 null 作为有效选项值，当 value 为 undefined/null 时组件将跳过处理",
      "when": "For controlled component usage; omit when used inside Form"
    },
    {
      "name": "data",
      "type": "DataItem[]",
      "required": false,
      "description": "下拉列表的选项数据数组",
      "when": "Use for flat list data structure"
    },
    {
      "name": "treeData",
      "type": "Object[]",
      "required": false,
      "description": "树形结构数据，包含嵌套的子节点。格式：[{children: [...]}]",
      "when": "Use for hierarchical/nested data structure instead of flat data"
    },
    {
      "name": "noCache",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "禁用值与数据项的缓存。默认情况下，Select 会缓存 value 对应的 data 项以优化性能。当 data 频繁变化时，建议设为 true 以确保组件始终使用最新数据",
      "when": "When data updates frequently or dynamically"
    },
    {
      "name": "defaultValue",
      "type": "Value",
      "required": false,
      "description": "非受控组件的初始值",
      "when": "需要设置初始选中值但不需要外部控制时使用"
    },
    {
      "name": "separator",
      "type": "string",
      "required": false,
      "description": "多选模式下，使用此分隔符将选中值连接成字符串",
      "when": "When backend expects comma-separated or other delimited string"
    },
    {
      "name": "multiple",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "是否开启多选模式",
      "when": "需要选择多个选项时使用"
    },
    {
      "name": "childrenKey",
      "type": "ObjectKey<DataItem>",
      "required": false,
      "defaultValue": "\\\"children\\\"",
      "description": "指定树形数据中子节点的属性名称",
      "when": "When using treeData with a different property name for children"
    },
    {
      "name": "disabled",
      "type": "boolean | ((data: DataItem) => boolean)",
      "required": false,
      "defaultValue": "false",
      "description": "为 true 时禁用全部选项；为函数时根据返回值禁用特定选项",
      "when": "需要禁用整个选择器或根据条件禁用特定选项时使用"
    },
    {
      "name": "prediction",
      "type": "((value: Value extends (infer U)[] ? U : Value, Data: DataItem) => boolean)",
      "required": false,
      "defaultValue": "(val, d) => val===format(d)",
      "description": "自定义匹配函数，用于判断 value 是否与数据项匹配。解决 JavaScript 引用相等（===）的局限性，即内容相同但引用不同的对象会被判定为不相等的问题",
      "when": "当选中值为对象类型且数据源会重新生成（如从接口获取）时使用，避免因引用变化导致的匹配失败"
    },
    {
      "name": "format",
      "type": "((data: DataItem) => Value extends (infer U)[] ? U : Value) | ObjectKey<DataItem>",
      "required": false,
      "defaultValue": "d => d",
      "description": "格式化数据项为选中值。字符串：提取对应属性（如 \\\"id\\\" 获取 d.id）。函数：从数据项返回自定义值",
      "when": "当数据项为对象但只需要其中某个属性作为值时使用"
    },
    {
      "name": "onChange",
      "type": "((value: Value, data?: DataItem , checked?: boolean ) => void)",
      "required": false,
      "description": "值变更回调。参数：value（选中值）、data（选中的数据项）、checked（选中状态）",
      "when": "需要响应选择变化时使用"
    },
    {
      "name": "groupBy",
      "type": "((item: DataItem, index?: number , data?: DataItem[] ) => string)",
      "required": false,
      "description": "通过返回分组名称对选项进行分组。参数：item（当前要分类的数据项）、index（数据项在数组中的索引位置）、data（完整的数据数组，提供上下文信息）",
      "when": "需要将选项按类别分组显示时使用，如按部门、类型或首字母等条件组织选项"
    },
    {
      "name": "className",
      "type": "string",
      "required": false,
      "description": "自定义类名"
    },
    {
      "name": "style",
      "type": "CSSProperties",
      "required": false,
      "description": "自定义样式"
    },
    {
      "name": "size",
      "type": "\"small\" | \"large\" | \"default\"",
      "required": false,
      "defaultValue": "\\\"default\\\"",
      "description": "不同尺寸"
    },
    {
      "name": "status",
      "type": "\"error\"",
      "required": false,
      "description": "组件状态"
    },
    {
      "name": "innerTitle",
      "type": "ReactNode",
      "required": false,
      "description": "内嵌标题"
    },
    {
      "name": "absolute",
      "type": "boolean | (() => HTMLElement | null)",
      "required": false,
      "defaultValue": "false",
      "description": "为 true 时，选项弹出层在 DOM 中独立 render; 为函数时，返回值作为弹出层容器"
    },
    {
      "name": "zIndex",
      "type": "number",
      "required": false,
      "defaultValue": "1000",
      "description": "选项列表 z-index 值, 需要配合 absolute"
    },
    {
      "name": "emptyText",
      "type": "ReactNode",
      "required": false,
      "description": "自定义空状态内容。与 renderOptionList 搭配使用时，将 emptyText 设置为 false 可禁用此功能，需要自定义空内容时可在 renderOptionList 中处理",
      "when": "When no options match the filter or data array is empty"
    },
    {
      "name": "keygen",
      "type": "| ObjectKey<DataItem> | ((data: DataItem, index?: number) => string | number) | true",
      "required": true,
      "defaultValue": "index",
      "description": "生成 key 的辅助方法, 为函数时，使用此函数返回值, 为 string 时，使用这个 string 对应的数据值。如 \\\"id\\\"，相当于 (d) => d.id。默认值为数组索引。对于简单数组（字符串/数字），可以使用默认值。但对于对象数组，必须指定合适的 keygen 以避免错误。如果不指定 keygen，组件会将整个对象作为 key，当 renderItem 默认为 (d) => d 时，会导致将对象直接渲染到 DOM 中，引发 React 渲染错误。",
      "when": "Always required for object arrays; optional for primitive arrays"
    },
    {
      "name": "clearable",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "启用时显示清除图标，可一键清空所有选中值",
      "when": "When users need ability to quickly clear selection"
    },
    {
      "name": "placeholder",
      "type": "string",
      "required": false,
      "description": "未选择任何选项时显示的占位文本",
      "when": "To provide hint text when select is empty"
    },
    {
      "name": "loading",
      "type": "boolean | ReactNode",
      "required": false,
      "defaultValue": "false",
      "description": "加载状态指示器。为 true 时显示默认的 Spin 组件，也可传入自定义加载组件",
      "when": "When fetching data asynchronously or during search operations"
    },
    {
      "name": "header",
      "type": "ReactNode",
      "required": false,
      "description": "自定义下拉列表顶部内容",
      "when": "To display instructions, filters, or actions above options"
    },
    {
      "name": "footer",
      "type": "ReactNode",
      "required": false,
      "description": "自定义下拉列表底部内容",
      "when": "To display summary, actions, or load more button below options"
    },
    {
      "name": "renderOptionList",
      "type": "((list: ReactNode, info: { loading?: ReactNode; }) => ReactNode)",
      "required": false,
      "description": "自定义渲染整个下拉列表内容。第一个参数 `list` 包含预渲染的选项列表（包括虚拟滚动、多列布局等）。第二个参数 `info` 包含：`loading` - 当前加载状态，可为 boolean（true 时显示默认加载动画）或自定义 ReactNode。注意：与 emptyText 配合使用时，将 emptyText 设为 false 可完全控制空状态渲染",
      "when": "For complete control over dropdown content (e.g., custom wrapper, animations, additional UI elements around the option list)"
    },
    {
      "name": "border",
      "type": "boolean",
      "required": false,
      "defaultValue": "true",
      "description": "控制是否显示选择框边框",
      "when": "Set to false for borderless design or custom styling"
    },
    {
      "name": "underline",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "仅显示底部边框，呈现下划线样式",
      "when": "For minimal UI design or form-like appearance"
    },
    {
      "name": "open",
      "type": "boolean",
      "required": false,
      "description": "程序化控制下拉列表的显示/隐藏状态",
      "when": "For controlled dropdown state or custom trigger logic"
    },
    {
      "name": "width",
      "type": "string | number",
      "required": false,
      "description": "选择框的宽度。可接受数字（像素）或带单位的字符串",
      "when": "To set fixed width instead of default auto-sizing"
    },
    {
      "name": "height",
      "type": "string | number",
      "required": false,
      "description": "下拉列表的最大高度。可接受数字（像素）或带单位的字符串",
      "when": "To limit dropdown height when many options exist"
    },
    {
      "name": "optionWidth",
      "type": "string | number",
      "required": false,
      "defaultValue": "100%",
      "description": "下拉列表的宽度。可接受数字（像素）或带单位的字符串",
      "when": "When dropdown needs different width than select input"
    },
    {
      "name": "itemsInView",
      "type": "number",
      "required": false,
      "defaultValue": "10",
      "description": "一次渲染的最大选项数。使用虚拟滚动优化大数据集性能。如需显示超过 10 个可见项，请调整此值",
      "when": "Increase when dropdown height shows more than 10 items"
    },
    {
      "name": "lineHeight",
      "type": "number | \"auto\"",
      "required": false,
      "defaultValue": "32",
      "description": "每个选项的高度。固定高度内容请设置数字；设为 \\\"auto\\\" 则根据内容自适应高度（大数据集时可能影响性能）",
      "when": "Set number for consistent height items; \\\"auto\\\" for variable content",
      "version": "3.4.0 added \\\"auto\\\" mode"
    },
    {
      "name": "position",
      "type": "\"auto\" | \"bottom-left\" | \"bottom-right\" | \"top-left\" | \"top-right\"",
      "required": false,
      "defaultValue": "auto",
      "description": "下拉列表弹出位置。\\\"auto\\\" 会根据可用空间自动调整",
      "when": "Override auto positioning for specific layout requirements"
    },
    {
      "name": "columns",
      "type": "number",
      "required": false,
      "defaultValue": "1",
      "description": "选项显示的列数。大于 1 时启用多列布局模式",
      "when": "When many short options need better space utilization"
    },
    {
      "name": "columnsTitle",
      "type": "ReactNode",
      "required": false,
      "description": "多列多选模式下，列顶部显示的标题",
      "when": "Using multi-column layout with multiple selection"
    },
    {
      "name": "showArrow",
      "type": "boolean",
      "required": false,
      "defaultValue": "true",
      "description": "显示下拉箭头图标（仅单选模式）",
      "when": "Set to false for cleaner appearance or custom icon"
    },
    {
      "name": "focusSelected",
      "type": "boolean",
      "required": false,
      "defaultValue": "true",
      "description": "多选模式下启用过滤时，点击选项后是否选中过滤输入框中的文本",
      "when": "Set to false to preserve filter text after selection"
    },
    {
      "name": "trim",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "失去焦点时自动删除输入内容的首尾空白字符",
      "when": "For cleaner data when users may accidentally input spaces"
    },
    {
      "name": "columnWidth",
      "type": "number",
      "required": false,
      "defaultValue": "160",
      "description": "多列布局中每列的宽度（仅在 columns > 1 时生效）",
      "when": "Adjust based on option content length in multi-column mode"
    },
    {
      "name": "maxLength",
      "type": "number",
      "required": false,
      "description": "过滤输入框允许输入的最大字符数",
      "when": "To limit filter/create input length"
    },
    {
      "name": "autoAdapt",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "下拉列表宽度根据内容自动调整",
      "when": "When option content varies significantly in width"
    },
    {
      "name": "compressed",
      "type": "boolean | \"no-repeat\" | \"hide-popover\"",
      "required": false,
      "defaultValue": "false",
      "description": "压缩多选项显示。true: 根据容器宽度动态计算并显示 \\\"+N\\\"；\\\"no-repeat\\\": 与 true 相同但弹出框中不重复显示已选项；\\\"hide-popover\\\": 仅显示 \\\"+N\\\" 不显示弹出框",
      "when": "When multiple selections may exceed container width"
    },
    {
      "name": "compressedBound",
      "type": "number",
      "required": false,
      "description": "固定显示的标签数量，超出部分显示 \\\"+N\\\"。设置后将始终显示指定数量的标签，不再根据容器宽度动态计算。对于大数据集，推荐设置此属性以避免昂贵的 DOM 计算，提升性能",
      "when": "With compressed mode and many selections for better performance"
    },
    {
      "name": "compressedClassName",
      "type": "string",
      "required": false,
      "description": "压缩项弹出框的 CSS 类名",
      "when": "To style the compressed items popover"
    },
    {
      "name": "renderCompressed",
      "type": "((options: { data: DataItem[], onRemove: (item: DataItem) => void }) => ReactNode)",
      "required": false,
      "description": "自定义渲染压缩/折叠项的显示内容",
      "when": "To customize the \\\"+N\\\" display or compressed content",
      "version": "3.5.0"
    },
    {
      "name": "hideCreateOption",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "从下拉列表中隐藏创建选项。按回车键直接选中创建的值",
      "when": "With onCreate for cleaner UI when creating is primary action"
    },
    {
      "name": "filterSingleSelect",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "过滤结果仅剩一个选项时，失焦自动选中该选项（仅在启用过滤时有效）",
      "when": "For better UX when users expect single match to be selected"
    },
    {
      "name": "defaultExpanded",
      "type": "(string | number)[]",
      "required": false,
      "description": "树形数据中默认展开的节点 key 值（非受控）",
      "when": "With treeData to show specific nodes expanded initially"
    },
    {
      "name": "defaultExpandAll",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "初始展开所有树节点（仅树形数据有效）",
      "when": "For small tree datasets where all nodes should be visible"
    },
    {
      "name": "expanded",
      "type": "(string | number)[]",
      "required": false,
      "description": "树形数据中展开的节点 key 值（受控）",
      "when": "For controlled tree expansion state"
    },
    {
      "name": "showHitDescendants",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "过滤树形数据时，显示匹配项的所有子节点",
      "when": "To keep parent-child context visible during search"
    },
    {
      "name": "convertBr",
      "type": "string | ((text: string) => string)",
      "required": false,
      "defaultValue": "\\\" \\\"",
      "description": "粘贴文本时转换换行符。字符串用于替换换行；函数用于转换文本",
      "when": "When pasting multi-line content with onCreate"
    },
    {
      "name": "resultClassName",
      "type": "string | ((value: DataItem) => string)",
      "required": false,
      "description": "选中项显示容器的 CSS 类名。可为字符串或基于值返回类名的函数",
      "when": "To style selected items differently based on value"
    },
    {
      "name": "renderItem",
      "type": "ObjectKey<DataItem> | ((data: DataItem, index?: number ) => ReactNode)",
      "required": false,
      "defaultValue": "d => d",
      "description": "渲染下拉列表中的每个选项。字符串使用属性值；函数自定义显示",
      "when": "To display complex option content or specific property"
    },
    {
      "name": "renderResult",
      "type": "((data: DataItem, index?: number ) => ReactNode)",
      "required": false,
      "defaultValue": "renderItem",
      "description": "渲染选中项的显示内容。未指定时使用 renderItem",
      "when": "When selected display differs from dropdown display"
    },
    {
      "name": "renderUnmatched",
      "type": "((value: Value extends (infer U)[] ? U : Value) => ReactNode)",
      "required": false,
      "description": "自定义渲染数据中不存在的值",
      "when": "When value might not exist in current data (e.g., async loading)"
    },
    {
      "name": "onBlur",
      "type": "((e: any) => void)",
      "required": false,
      "description": "选择框失去焦点时触发",
      "when": "For form validation or saving draft selections"
    },
    {
      "name": "onFocus",
      "type": "((e: any) => void)",
      "required": false,
      "description": "选择框获得焦点时触发",
      "when": "To load data, show hints, or track analytics"
    },
    {
      "name": "onFilter",
      "type": "((text: string, from?: string ) => void | ((data: DataItem) => boolean) )",
      "required": false,
      "description": "启用过滤功能。返回函数用于前端过滤，返回 undefined 用于后端过滤",
      "when": "For searchable select or large datasets"
    },
    {
      "name": "onCreate",
      "type": "boolean | ((input: string | DataItem) => string | DataItem)",
      "required": false,
      "description": "从输入创建新选项。true 直接使用输入值；函数将输入转换为选项",
      "when": "For tags input or allowing custom values"
    },
    {
      "name": "onEnterExpand",
      "type": "((e: KeyboardEvent<HTMLDivElement>) => boolean)",
      "required": false,
      "description": "按回车键展开下拉框时调用。返回 false 阻止展开",
      "when": "To customize Enter key behavior"
    },
    {
      "name": "onCollapse",
      "type": "((collapse: boolean) => void)",
      "required": false,
      "description": "下拉框打开/关闭时触发。参数表示是否收起状态",
      "when": "To sync UI state or load data on open"
    },
    {
      "name": "onExpand",
      "type": "((value: (string | number)[]) => void)",
      "required": false,
      "description": "树节点展开/收起时触发。接收展开节点的 key 数组",
      "when": "For controlled tree expansion or tracking state"
    },
    {
      "name": "emptyAfterSelect",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "选中选项后清空过滤输入框",
      "when": "For better UX in searchable multi-select"
    },
    {
      "name": "filterDelay",
      "type": "number",
      "required": false,
      "defaultValue": "400",
      "description": "过滤输入的防抖延迟（毫秒）",
      "when": "Adjust for server-side filtering or performance"
    },
    {
      "name": "loader",
      "type": "((key: string | number, data: DataItem) => void)",
      "required": false,
      "description": "动态加载树节点子级。无 children 的节点展开时触发加载",
      "when": "For lazy-loading large tree structures"
    },
    {
      "name": "onAdvancedFilter",
      "type": "((text: string) => (data: DataItem) => boolean)",
      "required": false,
      "description": "高级过滤模式，允许在当前层级的过滤结果和原始数据间切换",
      "when": "For complex filtering scenarios with toggle capability"
    },
    {
      "name": "reFocus",
      "type": "boolean",
      "required": false,
      "defaultValue": "false",
      "description": "启用过滤和创建功能时，选中选项后自动聚焦输入框",
      "when": "For continuous input in filter+create mode"
    },
    {
      "name": "adjust",
      "type": "boolean",
      "required": false,
      "defaultValue": "true",
      "description": "下拉框被视口边缘遮挡时自动调整位置",
      "when": "Set to false for fixed positioning requirements"
    },
    {
      "name": "onLoadMore",
      "type": "(() => void | Promise<any>)",
      "required": false,
      "description": "滚动到下拉列表底部时触发，用于无限滚动加载",
      "when": "For pagination or lazy-loading large datasets",
      "version": "3.4.0"
    },
    {
      "name": "threshold",
      "type": "number",
      "required": false,
      "defaultValue": "1",
      "description": "触发 onLoadMore 的滚动阈值（0-1）。1 表示列表底部",
      "when": "Set lower to preload before reaching bottom",
      "version": "3.4.0"
    },
    {
      "name": "trigger",
      "type": "\"click\" | \"hover\"",
      "required": false,
      "defaultValue": "\\\"click\\\"",
      "description": "打开下拉框的触发方式",
      "when": "Use \\\"hover\\\" for quick preview scenarios",
      "version": "3.4.0"
    },
    {
      "name": "highlight",
      "type": "boolean",
      "required": false,
      "description": "过滤时高亮匹配的文本",
      "when": "To visually indicate search matches",
      "version": "3.7.0"
    },
    {
      "name": "popover",
      "type": "PopoverProps[\"position\"]",
      "required": false,
      "description": "校验信息弹出位置"
    },
    {
      "name": "popoverProps",
      "type": "PopoverProps",
      "required": false,
      "description": "校验或者tip弹框接受的属性"
    },
    {
      "name": "name",
      "type": "Name",
      "required": false,
      "description": "Form 内存取数据的 key"
    },
    {
      "name": "beforeChange",
      "type": "((value: T) => void | T )",
      "required": false,
      "description": "值改变前的回调，当返回值不为空时将作为组件的新值"
    },
    {
      "name": "reserveAble",
      "type": "boolean",
      "required": false,
      "description": "控制组件卸载时是否保留字段数据。设置为 true 时，组件移除后在表单状态中保留数据。适用于动态表单、条件字段，或需要临时隐藏/显示字段但保留其值的场景"
    },
    {
      "name": "rules",
      "type": "RuleItem[]",
      "required": false,
      "description": "用于校验字段值的规则数组。每个规则可以是函数、正则表达式或规则对象。支持内置规则（必填、邮箱等）和自定义校验逻辑。详细配置参见 [Rule](/components/rule)"
    },
    {
      "name": "onError",
      "type": "((error?: Error ) => void)",
      "required": false,
      "description": "校验完成时触发的回调函数。接收校验错误（如果有）作为参数。适用于自定义错误处理、记录校验结果，或根据校验状态触发副作用"
    },
    {
      "name": "bind",
      "type": "string[]",
      "required": false,
      "description": "当前字段值改变时需要重新校验的字段名称数组。启用字段间的联动校验功能。常用于密码确认、关联下拉选择或相互依赖的表单计算等场景"
    }
  ],
  "examples": [
    {
      "name": "01-01-base",
      "title": "cn - 基本用法",
      "code": "/**\n * cn - 基本用法\n *    -- Select 通过`data`属性设置数据源，通过`keygen`属性设置key生成器，通过`renderItem`属性设置渲染函数\n * en - Basic\n *    --\n */\nimport React from 'react';\nimport { Select } from 'shineout';\n\n\nexport default () => {\n  const data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet', 'pink'];\n  return (\n    <div>\n      <Select width={300} clearable data={data} keygen placeholder='Select Color' />\n    </div>\n  );\n};\n",
      "language": "tsx"
    },
    {
      "name": "01-02-multiple",
      "title": "cn - 多选",
      "code": "/**\n * cn - 多选\n *    -- 设置`multiple`属性允许开启多选功能\n * en - Multiple\n *    -- Set `multiple` to enable multiple selection\n */\nimport React from 'react';\nimport { Select } from 'shineout';\n\nexport default () => {\n  const [value, setValue] = React.useState<string[]>();\n  const data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet', 'pink'];\n  return (\n    <div>\n      <Select\n        width={300}\n        multiple\n        data={data}\n        keygen\n        value={value}\n        onChange={(v) => setValue(v)}\n        placeholder='Select Color'\n        clearable\n      />\n    </div>\n  );\n};\n",
      "language": "tsx"
    },
    {
      "name": "01-03-01-compressed",
      "title": "cn - 合并选项",
      "code": "/**\n * cn - 合并选项\n *    -- 多选下设置`compressed`属性，结果不换行，超出折叠显示\n * en - Compressed\n *    -- Set `compressed` to prevent wrapping and will be displayed beyond the fold when multiple\n */\nimport React from 'react';\nimport { Select } from 'shineout';\n\nexport default () => {\n  const data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet', 'pink'];\n  return (\n    <div>\n      <Select\n        width={300}\n        defaultValue={data}\n        multiple\n        onChange={(v) => console.log(v)}\n        data={data}\n        keygen\n        placeholder='Select Color'\n        compressed\n        clearable\n      />\n    </div>\n  );\n};\n",
      "language": "tsx"
    },
    {
      "name": "01-03-02-compressed",
      "title": "cn - 合并选项去重",
      "code": "/**\n * cn - 合并选项去重\n *    -- 当`compressed`属性值为 \"no-repeat\" 时，合并的选项中不会出现结果框中的重复内容\n * en - Compressed no-repeat\n *    -- When the value of the `compressed` property is 'no-repeat', the repeated content in the merged options will not appear in the result box\n */\nimport React from 'react';\nimport { Select } from 'shineout';\n\nexport default () => {\n  const data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet', 'pink'];\n  return (\n    <div>\n      <Select\n        width={300}\n        defaultValue={data}\n        multiple\n        onChange={(v) => console.log(v)}\n        data={data}\n        keygen\n        placeholder='Select Color'\n        compressed='no-repeat'\n        clearable\n      />\n    </div>\n  );\n};\n",
      "language": "tsx"
    },
    {
      "name": "01-04-compressed",
      "title": "cn - 隐藏合并选项",
      "code": "/**\n * cn - 隐藏合并选项\n *    -- 使用 `compressed` 属性并设置值为 \"hide-popover\" 可以合并选中结果，仅展示合并后的选项数量，不再弹出层中展示合并的选项\n *    -- 建议数据量较大的情况下开启该功能，配合固定数值的 `compressedBound` 属性可降额外的低性能开销\n * en - Only merge options\n *    -- Set the `compressed` property to `hide-popover` to merge the selected results, only display the number of merged options, and no longer display the merged options in the pop-up layer\n *    -- It is recommended to enable this function when the data volume is large\n */\nimport React from 'react';\nimport { Select } from 'shineout';\n\nexport default () => {\n  const data = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'violet', 'pink'];\n  return (\n    <div>\n      <Select\n        width={300}\n        defaultValue={data}\n        multiple\n        onChange={(v) => console.log(v)}\n        data={data}\n        keygen\n        placeholder='Select Color'\n        compressed='hide-popover'\n        clearable\n      />\n    </div>\n  );\n};\n",
      "language": "tsx"
    }
  ],
  "subComponents": [],
  "version": "3.7.7",
  "apiSummary": {
    "totalProps": 86,
    "requiredProps": 1,
    "propsWithWhen": 70
  }
}