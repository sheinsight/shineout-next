{
  "name": "Divider",
  "description": "分割线是一个呈线状的轻量化组件，起到分割、组织、细化的作用，用于有逻辑的组织元素内容和页面结构",
  "category": "layout",
  "importPath": "import { Divider } from 'shineout'",
  "props": [
    {
      "name": "className",
      "type": "string",
      "required": false,
      "description": "自定义类名"
    },
    {
      "name": "style",
      "type": "CSSProperties",
      "required": false,
      "description": "自定义样式"
    },
    {
      "name": "children",
      "type": "ReactNode",
      "required": false,
      "description": "分割线中文字内容"
    },
    {
      "name": "mode",
      "type": "\"horizontal\" | \"vertical\"",
      "required": false,
      "defaultValue": "\\\"horizontal\\\"",
      "description": "分割线排布模式"
    },
    {
      "name": "orientation",
      "type": "\"center\" | \"left\" | \"right\"",
      "required": false,
      "defaultValue": "\\\"center\\\"",
      "description": "水平分割线的文字排布位置"
    },
    {
      "name": "type",
      "type": "\"solid\" | \"dashed\"",
      "required": false,
      "defaultValue": "\\\"solid\\\"",
      "description": "线段类型"
    }
  ],
  "examples": [
    {
      "title": "Base",
      "description": "Divider is horizontal by default. You can add text within Divider",
      "code": "/**\n * cn - 基本用法\n *    --默认为水平分割线\n * en - Base\n *    --Divider is horizontal by default. You can add text within Divider\n */\nimport React from 'react';\nimport { Divider } from 'shineout';\n\nconst App: React.FC = () => (\n  <div style={{ fontSize: 12 }}>\n    <p>A design is a plan or specification for the construction of an object.</p>\n    <Divider />\n    <p>A design is a plan or specification for the construction of an object.</p>\n  </div>\n);\n\nexport default App;\n"
    },
    {
      "title": "Dashed",
      "description": "Use type=\"dashed\" make it dashed",
      "code": "/**\n * cn - 虚线分割\n *    --使用 `type`=\"dashed\" 设置为虚线分割线\n * en - Dashed\n *    --Use type=\"dashed\" make it dashed\n */\nimport React from 'react';\nimport { Divider } from 'shineout';\n\nconst App: React.FC = () => (\n  <div style={{ fontSize: 12 }}>\n    <p>A design is a plan or specification for the construction of an object.</p>\n    <Divider type='dashed' />\n    <p>A design is a plan or specification for the construction of an object.</p>\n  </div>\n);\n\nexport default App;\n"
    },
    {
      "title": "Divider with title",
      "description": "Divider with inner title, set orientation=\"left/right\" to align it",
      "code": "/**\n * cn - 带文字的分割线\n *    -- 分割线中带有文字，可以用 orientation 指定文字位置\n * en - Divider with title\n *    --Divider with inner title, set orientation=\"left/right\" to align it\n */\nimport React from 'react';\nimport { Divider } from 'shineout';\n\nconst App: React.FC = () => (\n  <div style={{ fontSize: 12 }}>\n    <p>A design is a plan or specification for the construction of an object.</p>\n    <Divider>Center</Divider>\n    <p>A design is a plan or specification for the construction of an object.</p>\n    <Divider orientation={'left'}>Left</Divider>\n    <p>A design is a plan or specification for the construction of an object.</p>\n    <Divider orientation={'right'}>Right</Divider>\n    <p>A design is a plan or specification for the construction of an object.</p>\n  </div>\n);\n\nexport default App;\n"
    },
    {
      "title": "Vertical",
      "description": "Use type=\"vertical\" make it vertical",
      "code": "/**\n * cn - 垂直分割线\n *    -- 使用 mode=\"vertical\" 设置为行内的垂直分割线\n * en - Vertical\n *    --Use type=\"vertical\" make it vertical\n */\nimport React from 'react';\nimport { Divider } from 'shineout';\n\nconst inlineStyle = {\n  display: 'inline-block',\n  lineHeight: '22px',\n  fontSize: 14,\n};\n\nconst App: React.FC = () => (\n  <>\n    <span style={inlineStyle}>Item 1</span>\n    <Divider mode='vertical'>H</Divider>\n    <span style={inlineStyle}>Item 2</span>\n    <Divider mode='vertical' />\n    <span style={inlineStyle}>Item 3</span>\n  </>\n);\n\nexport default App;\n"
    }
  ],
  "subComponents": [],
  "version": "3.7.10-beta.3",
  "notes": {},
  "apiSummary": {
    "totalProps": 6,
    "requiredProps": 0,
    "propsWithWhen": 0,
    "examplesCount": 4
  }
}