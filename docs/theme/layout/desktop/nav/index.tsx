import { useLocation, useNavigate } from 'react-router-dom';
import { useSnapshot } from 'valtio';
import store, { dispatch } from '../../../store';
import useStyles from '../style';
import { Button, setConfig, setLocale, Badge, Tag } from 'shineout';

const Nav = () => {
  const classes = useStyles();
  const navigate = useNavigate();
  const state = useSnapshot(store);
  const location = useLocation();
  const search = location.search;
  // 获取search参数
  const searchParams = new URLSearchParams(search);
  const direction = searchParams.get('direction') === 'rtl' ? 'rtl' : 'ltr';
  const changeDirection = () => {
    const nextDirection = direction === 'rtl' ? 'ltr' : 'rtl';
    searchParams.set('direction', nextDirection);
    navigate(location.pathname + '?' + searchParams.toString());
    document.body.className = nextDirection;
    setConfig({ direction: nextDirection });
  };

  // const { locale } = useConfig();

  // const navs = [
  // {
  //   title: 'Home',
  //   path: `/${state.locales}/home`,
  // },
  // {
  //   title: 'Design',
  //   path: `/${state.locales}/design`,
  // },
  // {
  //   title: 'Introduce',
  //   path: `/${state.locales}/introduce`,
  // },
  // {
  //   title: 'Component',
  //   path: `/${state.locales}/component/${state.doc}`,
  // },
  // {
  //   title: 'Changelog',
  //   path: `/${state.locales}/changelog`,
  // },
  // ];

  const handleChangeLocales = () => {
    const nextLocales = state.locales === 'en' ? 'cn' : 'en';

    dispatch.setLocales(nextLocales);
    if (nextLocales === 'en') {
      setLocale('en-US');
    } else if (nextLocales === 'cn') {
      setLocale('zh-CN');
    }

    const nextPath = location.pathname.replace(`/${state.locales}/`, `/${nextLocales}/`);

    navigate(nextPath + location.search);
  };

  const renderLeftNav = () => {
    return (
      <svg
        width='24'
        height='24'
        viewBox='0 0 24 24'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          d='M6 4C6 5.10457 5.10457 6 4 6C2.89543 6 2 5.10457 2 4C2 2.89543 2.89543 2 4 2C5.10457 2 6 2.89543 6 4Z'
          fill='#999DA8'
        />
        <path
          d='M6 12C6 13.1046 5.10457 14 4 14C2.89543 14 2 13.1046 2 12C2 10.8954 2.89543 10 4 10C5.10457 10 6 10.8954 6 12Z'
          fill='#999DA8'
        />
        <path
          d='M6 20C6 21.1046 5.10457 22 4 22C2.89543 22 2 21.1046 2 20C2 18.8954 2.89543 18 4 18C5.10457 18 6 18.8954 6 20Z'
          fill='#999DA8'
        />
        <path
          d='M14 4C14 5.10457 13.1046 6 12 6C10.8954 6 10 5.10457 10 4C10 2.89543 10.8954 2 12 2C13.1046 2 14 2.89543 14 4Z'
          fill='#999DA8'
        />
        <path
          d='M14 12C14 13.1046 13.1046 14 12 14C10.8954 14 10 13.1046 10 12C10 10.8954 10.8954 10 12 10C13.1046 10 14 10.8954 14 12Z'
          fill='#999DA8'
        />
        <path
          d='M14 20C14 21.1046 13.1046 22 12 22C10.8954 22 10 21.1046 10 20C10 18.8954 10.8954 18 12 18C13.1046 18 14 18.8954 14 20Z'
          fill='#999DA8'
        />
        <path
          d='M22 4C22 5.10457 21.1046 6 20 6C18.8954 6 18 5.10457 18 4C18 2.89543 18.8954 2 20 2C21.1046 2 22 2.89543 22 4Z'
          fill='#999DA8'
        />
        <path
          d='M22 12C22 13.1046 21.1046 14 20 14C18.8954 14 18 13.1046 18 12C18 10.8954 18.8954 10 20 10C21.1046 10 22 10.8954 22 12Z'
          fill='#999DA8'
        />
        <path
          d='M22 20C22 21.1046 21.1046 22 20 22C18.8954 22 18 21.1046 18 20C18 18.8954 18.8954 18 20 18C21.1046 18 22 18.8954 22 20Z'
          fill='#999DA8'
        />
      </svg>
    );
  };

  // const renderRightNav = () => {};

  // const handleChangeEnv = () => {
  //   dispatch.setEnv(state.env === 'SHEIN' ? 'GitHub' : 'SHEIN');
  // };

  // const renderPrefix = () => {
  //   return (
  //     <svg
  //       style={{ marginRight: 8 }}
  //       width='14'
  //       height='14'
  //       viewBox='0 0 14 14'
  //       fill='none'
  //       xmlns='http://www.w3.org/2000/svg'
  //     >
  //       <g clipPath='url(#clip0_193_361)'>
  //         <path
  //           d='M2.87521 2.63359C0.824961 4.68384 0.824961 8.00796 2.87521 10.0582C4.78609 11.9691 7.80351 12.099 9.86484 10.4479L11.7081 12.2915C11.9359 12.5193 12.3053 12.5193 12.5331 12.2915C12.7609 12.0637 12.7609 11.6943 12.5331 11.4665L10.6899 9.62276C12.3406 7.56144 12.2106 4.54432 10.2998 2.63359C8.24958 0.583338 4.92547 0.583338 2.87521 2.63359ZM3.70017 3.45855C5.29481 1.86391 7.88024 1.86391 9.47488 3.45855C11.0695 5.05319 11.0695 7.63861 9.47488 9.23325C7.88024 10.8279 5.29481 10.8279 3.70017 9.23325C2.10553 7.63861 2.10553 5.05319 3.70017 3.45855Z'
  //           fill='#B3B7C1'
  //         />
  //       </g>
  //       <defs>
  //         <clipPath id='clip0_193_361'>
  //           <rect width='14' height='14' fill='white' />
  //         </clipPath>
  //       </defs>
  //     </svg>
  //   );
  // };

  // const renderAvatar = () => {
  //   return (
  //     <div style={{ height: 32, width: 32, borderRadius: '50%', background: '#F4F5F8' }}></div>
  //   );
  // };

  const renderLogo = () => {
    return (
      <svg
        width='155'
        height='28'
        viewBox='0 0 155 28'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          d='M18.2588 0.475038C18.2588 0.294961 18.0379 0.195354 17.8984 0.309218C16.8735 1.14575 13.7216 3.43607 9.20833 4.11595C8.36218 4.24341 7.5602 4.43071 6.80856 4.65667C2.03502 6.09173 -0.000917435 11.2002 -0.000917435 16.1847V16.1847C-0.000917435 16.1847 3.8098 12.7664 9.20833 11.9293C10.1463 11.7838 11.0315 11.5647 11.8541 11.3018C16.3028 9.88009 18.2588 5.14542 18.2588 0.475038V0.475038Z'
          fill='#197AFA'
        />
        <path
          d='M18.2588 11.2709C18.2588 11.0909 18.0379 10.9913 17.8984 11.1051C16.8735 11.9416 13.7216 14.232 9.20833 14.9118C8.36218 15.0393 7.56021 15.2266 6.80857 15.4526C2.03502 16.8876 -0.000915051 21.9961 -0.000915051 26.9806V26.9806C-0.000915051 26.9806 3.80981 23.5623 9.20833 22.7252C10.1463 22.5797 11.0315 22.3606 11.8541 22.0977C16.3028 20.676 18.2588 15.9413 18.2588 11.2709V11.2709Z'
          fill='#FF8259'
        />
        <path
          fillRule='evenodd'
          clipRule='evenodd'
          d='M36.7862 20.0911C37.0822 19.5508 37.2312 18.9333 37.2312 18.2386H37.2322C37.2322 17.544 37.1567 16.9265 36.9342 16.3862C36.7117 15.8459 36.4147 15.3828 35.9686 14.9197C35.5236 14.4566 35.0031 14.0707 34.3345 13.6848C33.667 13.2989 32.9239 12.9901 31.9584 12.6814C31.2153 12.4498 30.6213 12.2183 30.1017 11.9867C30.0554 11.9661 30.0102 11.9461 29.9661 11.9266C29.5158 11.7271 29.1842 11.5802 28.9136 11.3693C28.8852 11.3471 28.8575 11.3256 28.8304 11.3048C28.5752 11.1075 28.386 10.9612 28.3186 10.7518C28.1706 10.5202 28.0961 10.2887 28.0961 9.97995C28.0961 9.7484 28.1696 9.51685 28.3186 9.28529C28.4676 9.05374 28.6166 8.82219 28.8391 8.66782C29.0617 8.51345 29.2842 8.35909 29.6557 8.2819C29.9527 8.20472 30.2497 8.12753 30.6213 8.12753C31.3643 8.12753 32.0329 8.20472 32.6269 8.43627C33.221 8.66782 33.7405 9.05374 34.1865 9.43966L36.7117 7.04696C35.9696 6.3523 35.0776 5.8892 34.112 5.50328C33.1464 5.11736 31.8839 4.96299 30.4733 4.96299C29.667 4.97199 28.8663 5.10198 28.0961 5.34891C27.4042 5.573 26.7521 5.91187 26.1649 6.3523C25.5709 6.81541 25.1259 7.35569 24.8288 7.97317C24.5318 8.59064 24.3828 9.2853 24.3828 10.0571C24.3828 10.829 24.5308 11.5236 24.9024 12.2183C25.1259 12.7586 25.5709 13.2989 26.0169 13.6848C26.5096 14.1232 27.0598 14.487 27.6511 14.7654C28.3186 15.0741 28.9871 15.3056 29.6557 15.5372L29.6557 15.5372C30.3147 15.7203 30.9601 15.9524 31.5868 16.2319C31.636 16.2538 31.6839 16.275 31.7305 16.2957C32.1761 16.4933 32.506 16.6397 32.7749 16.8493C33.0719 17.0037 33.2955 17.2353 33.369 17.4668C33.4435 17.6984 33.518 17.9299 33.518 18.2386C33.518 18.4702 33.4445 18.7017 33.2955 18.9333C33.2481 18.9824 33.2008 19.0393 33.1511 19.0991C33.0446 19.2272 32.9273 19.3683 32.7749 19.4736C32.5524 19.628 32.2554 19.7823 31.9584 19.8595C31.6613 19.9367 31.3643 20.0139 30.9928 20.0139C30.1762 20.0139 29.4332 19.8595 28.6901 19.628C27.9481 19.3964 27.205 19.0105 26.462 18.393L23.8633 20.7857C24.0995 20.9392 24.3239 21.0926 24.5412 21.2412C24.8704 21.4663 25.1834 21.6803 25.4964 21.8663C25.647 21.9333 25.7976 22.0068 25.9499 22.0811C26.3239 22.2636 26.7084 22.4513 27.1305 22.561L27.14 22.5634C27.7319 22.717 28.3222 22.8701 28.9872 22.9469C29.5812 23.0241 30.3242 23.1012 31.1408 23.1012C31.9719 23.0981 32.798 22.9681 33.5925 22.7153C34.3013 22.497 34.9588 22.1291 35.5236 21.6347C36.0432 21.1716 36.4882 20.7085 36.7862 20.0911ZM51.1723 22.8698H54.811V5.34897H51.1723V12.2955H44.4133V5.34897H40.7735V22.8698H44.4133V15.1513H51.1723V22.8698ZM86.7957 22.8698H100.09V19.7824H90.361V14.997H99.3471V12.2955H90.361V8.1276H100.09V5.34897H86.7957V22.8698ZM60.0214 22.8698H63.6601H63.6611V5.34897H60.0214V22.8698ZM82.1421 23.3328V5.34888H78.5778V13.9935L68.4026 4.80859V22.7153H71.9678V14.1479L82.1421 23.3328ZM111.932 22.4128C110.672 22.4128 109.506 22.1882 108.435 21.7391C107.379 21.2899 106.45 20.6643 105.646 19.8623C104.843 19.0602 104.221 18.1298 103.78 17.0711C103.339 15.9964 103.118 14.8415 103.118 13.6063C103.118 12.3551 103.339 11.2002 103.78 10.1415C104.221 9.08276 104.835 8.1604 105.623 7.3744C106.41 6.57235 107.332 5.95477 108.387 5.52167C109.459 5.07252 110.624 4.84795 111.884 4.84795C113.129 4.84795 114.279 5.07252 115.334 5.52167C116.405 5.95477 117.335 6.57235 118.123 7.3744C118.926 8.1604 119.548 9.09078 119.989 10.1655C120.43 11.2242 120.651 12.3792 120.651 13.6304C120.651 14.8655 120.43 16.0205 119.989 17.0952C119.548 18.1539 118.934 19.0843 118.146 19.8863C117.359 20.6723 116.429 21.2899 115.358 21.7391C114.302 22.1882 113.16 22.4128 111.932 22.4128ZM111.884 18.972C112.877 18.972 113.743 18.7474 114.484 18.2983C115.24 17.8491 115.823 17.2235 116.232 16.4215C116.642 15.6034 116.847 14.665 116.847 13.6063C116.847 12.8043 116.728 12.0824 116.492 11.4408C116.256 10.7831 115.917 10.2217 115.476 9.75648C115.035 9.27525 114.507 8.91433 113.893 8.67371C113.294 8.41706 112.625 8.28873 111.884 8.28873C110.892 8.28873 110.018 8.5133 109.262 8.96245C108.521 9.39556 107.946 10.0131 107.537 10.8152C107.127 11.6012 106.922 12.5316 106.922 13.6063C106.922 14.4084 107.041 15.1382 107.277 15.7959C107.513 16.4536 107.844 17.023 108.269 17.5043C108.71 17.9694 109.238 18.3304 109.852 18.587C110.467 18.8437 111.144 18.972 111.884 18.972ZM126.896 21.4984C127.952 22.092 129.165 22.3887 130.535 22.3887C131.906 22.3887 133.111 22.092 134.15 21.4984C135.19 20.9049 136.001 20.0868 136.584 19.0442C137.167 18.0015 137.458 16.8065 137.458 15.459V5.13669H133.725V15.6756C133.725 16.3493 133.583 16.9348 133.3 17.4321C133.032 17.9133 132.662 18.2903 132.189 18.563C131.717 18.8196 131.165 18.9479 130.535 18.9479C129.936 18.9479 129.385 18.8196 128.881 18.563C128.393 18.2903 128.007 17.9053 127.723 17.408C127.44 16.9107 127.298 16.3252 127.298 15.6515V5.13669H123.565V15.435C123.565 16.7824 123.856 17.9855 124.439 19.0442C125.037 20.0868 125.857 20.9049 126.896 21.4984ZM145.828 8.4331V22.124H149.538V8.4331H154.76V5.13669H140.606V8.4331H145.828Z'
          fill='#141737'
        />
      </svg>
    );
  };

  const renderEnv = () => {
    const isBeta = process.env.DOC_ENV === 'BASE';
    if (!isBeta) return null;
    return (
      <Tag style={{ marginLeft: 10 }} size='small' color='success'>
        Beta
      </Tag>
    );
  };

  return (
    <div className={classes.nav}>
      <div className='left-nav'>{renderLeftNav()}</div>
      <div className='logo'>
        {renderLogo()}
        {renderEnv()}
      </div>
      <ul className='entry'>
        {/* <li>
          <Input
            placeholder={`${getLocale(locale, 'search')}...`}
            prefix={renderPrefix()}
            border={false}
            style={{ backgroundColor: '#F4F5F8', width: 280 }}
          ></Input>
        </li> */}
        <li style={{ padding: '0 12px' }}>
          <Button size='small' mode='text' onClick={changeDirection}>
            {direction === 'rtl' ? 'LTR' : 'RTL'}
          </Button>
        </li>
        <li style={{ paddingInlineEnd: 24 }} onClick={handleChangeLocales}>
          <svg
            width='20'
            height='20'
            viewBox='0 0 20 20'
            fill='none'
            xmlns='http://www.w3.org/2000/svg'
          >
            <path
              fillRule='evenodd'
              clipRule='evenodd'
              d='M16.6667 10H6.66667C6.20643 10 5.83333 10.3731 5.83333 10.8333V17.5C5.83333 17.9602 6.20643 18.3333 6.66667 18.3333H16.6667C17.1269 18.3333 17.5 17.9602 17.5 17.5V10.8333C17.5 10.3731 17.1269 10 16.6667 10ZM6.66667 9.16667C5.74619 9.16667 5 9.91286 5 10.8333V17.5C5 18.4205 5.74619 19.1667 6.66667 19.1667H16.6667C17.5871 19.1667 18.3333 18.4205 18.3333 17.5V10.8333C18.3333 9.91286 17.5871 9.16667 16.6667 9.16667H6.66667Z'
              fill='#333E59'
            />
            <path
              d='M7.25 10.7167H11.525V11.4917H8.15833V13.225H11.325V14H8.15833V15.8917H11.6667V16.6667H7.25V10.7167Z'
              fill='#333E59'
            />
            <path
              d='M14.6885 12.2417C15.7552 12.2417 16.2969 12.825 16.2969 14.0083V16.6667H15.4135V14.0833C15.4135 13.35 15.0719 12.9833 14.4052 12.9833C14.1552 12.9833 13.9302 13.0667 13.7469 13.25C13.5469 13.45 13.4219 13.725 13.3885 14.075V16.6667H12.5052V12.3583H13.3885V12.8917C13.5552 12.675 13.7469 12.5167 13.9635 12.4083C14.1802 12.2917 14.4219 12.2417 14.6885 12.2417Z'
              fill='#333E59'
            />
            <rect x='1.66669' y='1.66667' width='11.6667' height='11.6667' rx='2' fill='#333E59' />
            <path
              d='M7.01002 2.59334H7.99002V4.32334H11.55V9.15334H10.6V8.58334H7.99002V11.9333H7.01002V8.58334H4.41002V9.15334H3.46002V4.32334H7.01002V2.59334ZM4.41002 7.65334H7.01002V5.25334H4.41002V7.65334ZM7.99002 7.65334H10.6V5.25334H7.99002V7.65334Z'
              fill='white'
            />
          </svg>
        </li>
        {/* <li style={{ paddingRight: 24 }}>
          <svg
            width='20'
            height='20'
            viewBox='0 0 20 20'
            fill='none'
            xmlns='http://www.w3.org/2000/svg'
          >
            <path
              d='M9.99219 1.49024C5.16211 1.48828 1.25 5.39844 1.25 10.2246C1.25 14.041 3.69727 17.2852 7.10547 18.4766C7.56445 18.5918 7.49414 18.2656 7.49414 18.043V16.5293C4.84375 16.8398 4.73633 15.0859 4.55859 14.793C4.19922 14.1797 3.34961 14.0234 3.60352 13.7305C4.20703 13.4199 4.82227 13.8086 5.53516 14.8613C6.05078 15.625 7.05664 15.4961 7.56641 15.3691C7.67773 14.9102 7.91602 14.5 8.24414 14.1816C5.49805 13.6895 4.35352 12.0137 4.35352 10.0215C4.35352 9.05469 4.67188 8.16602 5.29688 7.44922C4.89844 6.26758 5.33398 5.25586 5.39258 5.10547C6.52734 5.00391 7.70703 5.91797 7.79883 5.99024C8.44336 5.81641 9.17969 5.72461 10.0039 5.72461C10.832 5.72461 11.5703 5.82031 12.2207 5.99609C12.4414 5.82813 13.5352 5.04297 14.5898 5.13867C14.6465 5.28906 15.0723 6.27734 14.6973 7.44336C15.3301 8.16211 15.6523 9.0586 15.6523 10.0273C15.6523 12.0234 14.5 13.7012 11.7461 14.1855C12.2051 14.6387 12.4902 15.2676 12.4902 15.9629V18.1602C12.5059 18.3359 12.4902 18.5098 12.7832 18.5098C16.2422 17.3438 18.7324 14.0762 18.7324 10.2266C18.7324 5.39844 14.8184 1.49024 9.99219 1.49024Z'
              fill='#333E59'
            />
          </svg>
        </li>
        <li style={{ paddingRight: 24 }}>
          <svg
            width='20'
            height='20'
            viewBox='0 0 20 20'
            fill='none'
            xmlns='http://www.w3.org/2000/svg'
          >
            <path
              d='M11.25 17.5C11.471 17.5 11.6829 17.5878 11.8392 17.7441C11.9954 17.9004 12.0832 18.1123 12.0832 18.3333C12.0832 18.5543 11.9954 18.7663 11.8392 18.9225C11.6829 19.0788 11.471 19.1666 11.25 19.1667H8.75C8.52901 19.1666 8.31708 19.0788 8.16083 18.9225C8.00457 18.7663 7.91679 18.5543 7.91679 18.3333C7.91679 18.1123 8.00457 17.9004 8.16083 17.7441C8.31708 17.5878 8.52901 17.5 8.75 17.5H11.25ZM10.0017 0.833328C10.2227 0.833328 10.4346 0.921126 10.5909 1.07741C10.7472 1.23369 10.835 1.44565 10.835 1.66666V2.49999L10.8317 2.55833C12.2204 2.75872 13.4904 3.45282 14.409 4.51345C15.3276 5.57408 15.8333 6.9302 15.8333 8.33333V14.1667H16.6667C16.8877 14.1667 17.0996 14.2545 17.2559 14.4107C17.4122 14.567 17.5 14.779 17.5 15C17.5 15.221 17.4122 15.433 17.2559 15.5892C17.0996 15.7455 16.8877 15.8333 16.6667 15.8333H3.33333C3.11232 15.8333 2.90036 15.7455 2.74408 15.5892C2.5878 15.433 2.5 15.221 2.5 15C2.5 14.779 2.5878 14.567 2.74408 14.4107C2.90036 14.2545 3.11232 14.1667 3.33333 14.1667H4.16667V8.33333C4.1668 6.92983 4.6728 5.5734 5.59191 4.51272C6.51101 3.45203 7.78164 2.75817 9.17083 2.55833C9.16895 2.53894 9.16812 2.51947 9.16833 2.49999V1.66666C9.16833 1.44565 9.25613 1.23369 9.41241 1.07741C9.56869 0.921126 9.78065 0.833328 10.0017 0.833328ZM10 4.16666C8.92628 4.16672 7.89403 4.58128 7.11852 5.32388C6.34301 6.06648 5.8841 7.07979 5.8375 8.15249L5.83333 8.33333V14.1667H14.1667V8.33333C14.1666 7.25961 13.752 6.22736 13.0095 5.45185C12.2669 4.67633 11.2535 4.21743 10.1808 4.17083L10 4.16666Z'
              fill='#333E59'
            />
          </svg>
        </li> */}
        {/* {navs.map((nav) => (
          <li key={nav.title} onClick={() => navigate(nav.path)}>
            {nav.title === 'Component' ? renderAvatar() : ''}
          </li>
        ))} */}
        {/* <li onClick={handleChangeEnv}>{state.env}</li> */}
      </ul>
    </div>
  );
};

export default Nav;
