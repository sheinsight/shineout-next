const api = JSON.parse('[{"title":"menu","properties":[{"name":"className","tag":{"cn":"自定义类名","en":"Custom class name","default":"","version":""},"required":false,"type":"string "},{"name":"style","tag":{"cn":"自定义样式","en":"Custom style","default":"","version":""},"required":false,"type":"CSSProperties "},{"name":"mode","tag":{"cn":"菜单样式","en":"style of menu","default":"\\\"inline\\\"","version":""},"required":false,"type":"\\\"inline\\\" | \\\"vertical\\\" | \\\"horizontal\\\" | \\\"vertical-auto\\\" "},{"name":"data","tag":{"cn":"需要渲染成菜单的数据","en":"Menu items data","default":"[]","version":""},"required":false,"type":"object[]"},{"name":"theme","tag":{"cn":"主题","en":"theme of menu","default":"","version":""},"required":false,"type":"\\\"dark\\\" | \\\"light\\\" "},{"name":"height","tag":{"cn":"菜单高度","en":"menu height","default":"","version":""},"required":false,"type":"string | number "},{"name":"openKeys","tag":{"cn":"展开的菜单(受控)","en":"expended menu","default":"[]","version":""},"required":false,"type":"(string | number)[]"},{"name":"caretColor","tag":{"cn":"三角展开符颜色","en":"triangle expansion color","default":"","version":""},"required":false,"type":"string "},{"name":"frontCaret","tag":{"cn":"前置实心三角展开符","en":"Front solid triangle expansion","default":"","version":""},"required":false,"type":"boolean "},{"name":"inlineIndent","tag":{"cn":"每一层缩进宽度","en":"indent of each level","default":"24","version":""},"required":false,"type":"number "},{"name":"looseChildren","tag":{"cn":"如果 children 有设置则菜单项可展开","en":"menu item expandable if has children","default":"false","version":""},"required":false,"type":"boolean "},{"name":"keygen","tag":{"cn":"生成每一项key的辅助方法。为 true 时，以数据项本身作为key，相当于 (d => d)。为函数时，使用此函数返回值。为string时，使用这个string对应的数据值。如 \\\"id\\\"，相当于 (d => d.id)","en":"Key generator. When it is true, the data itself is used as the key equivalent to (d => d). When it is a function, use its return value. When it is a string，ues the value of the string. For example, \\\"id\\\" is the same thing as (d) => d.id.","default":"true","version":""},"required":true,"type":"| ObjectKey<DataItem>  | ((data: DataItem, index?: number) => string | number)  | true"},{"name":"defaultOpenKeys","tag":{"cn":"初始展开的菜单;如果需要设置此值,则需要设置keygen,此值为一个包含key的数组","en":"Initial expanded menu","default":"[]","version":""},"required":false,"type":"(string | number)[]"},{"name":"parentSelectable","tag":{"cn":"父级菜单是否可选中","en":"parent menu Selectable","default":"false","version":""},"required":false,"type":"boolean "},{"name":"onClick","tag":{"cn":"子菜单点击事件,参数为当条数据","en":"The function will be called when the user clicks the menu item.","default":"","version":""},"required":false,"type":"((data: DataItem) => void) "},{"name":"active","tag":{"cn":"验证是否激活,参数为对应的数据对象,返回true则代表该菜单激活","en":"The item is actived when the active function return true.","default":"","version":""},"required":false,"type":"((data: DataItem) => boolean) "},{"name":"disabled","tag":{"cn":"是否禁用选项","en":"Whether to be disabled","default":"d => d.disabled","version":""},"required":false,"type":"((data: DataItem) => boolean) "},{"name":"frontCaretType","tag":{"cn":"前置三角展开符类型","en":"front triangle expansion symbol type","default":"\\\"solid\\\"","version":""},"required":false,"type":"\\\"hollow\\\" | \\\"solid\\\" "},{"name":"onOpenChange","tag":{"cn":"菜单展开/收起回调","en":"menu open change callback","default":"","version":""},"required":false,"type":"((keys: Key[]) => void) "},{"name":"linkKey","tag":{"cn":"需要注入子菜单的链接键值","en":"the key of inject the link value of the submenu","default":"","version":""},"required":false,"type":"((d: DataItem) => string) | ObjectKey<DataItem> "},{"name":"renderItem","tag":{"cn":"元素渲染方式,如果为字符串,则会以对应的值作为显示内容;如果为函数,则以函数返回的结果作为显示内容,函数参数为对应的数据对象","en":"Element render mode. If it is a string, the corresponding value is taken as the display content; If it is a function, the result returned by the function is taken as the display content.","default":"\\\"title\\\"","version":""},"required":false,"type":"ObjectKey<DataItem> | ((data: DataItem, index: number) => ReactNode) "},{"name":"renderIcon","tag":{"cn":"渲染Icon","en":"Render Icon","default":"","version":""},"required":false,"type":"((data: DataItem) => ReactNode) "},{"name":"collapse","tag":{"cn":"是否折叠","en":"Whether to collapse","default":"false","version":""},"required":false,"type":"boolean "},{"name":"header","tag":{"cn":"头部内容， 仅在 mode为 \\\"inline\\\" 时生效","en":"","default":"","version":""},"required":false,"type":"ReactNode"}],"cn":"","en":"","sort":"0"},{"title":"Menu.Search","properties":[{"name":"value","tag":{"cn":"输入值","en":"Value","default":"","version":""},"required":false,"type":"V "},{"name":"onChange","tag":{"cn":"值改变回调","en":"Value change callback","default":"","version":""},"required":false,"type":"(value: string) => void"},{"name":"defaultValue","tag":{"cn":"默认值","en":"Default value","default":"","version":""},"required":false,"type":"string"},{"name":"clearable","tag":{"cn":"可点击清空图标删除输入框内容，为函数式表示清空回调","en":"Remove content of the input when clicking the clear icon, clear event function","default":"false","version":""},"required":false,"type":"boolean | (() => void) "},{"name":"onBlur","tag":{"cn":"失去焦点后的回调","en":"The callback of blur","default":"","version":""},"required":false,"type":"FocusEventHandler<Element> "},{"name":"onFocus","tag":{"cn":"聚焦后的回调","en":"The callback when Textarea focus","default":"","version":""},"required":false,"type":"FocusEventHandler<Element> "},{"name":"onClick","tag":{"cn":"点击回调","en":"Click callback","default":"","version":""},"required":false,"type":"MouseEventHandler<Element> "},{"name":"disabled","tag":{"cn":"禁用组件","en":"Disable component","default":"false","version":""},"required":false,"type":"boolean "},{"name":"autoSelect","tag":{"cn":"是否自动获得焦点","en":"Automatically select all data after mouse click","default":"false","version":""},"required":false,"type":"boolean "},{"name":"size","tag":{"cn":"不同尺寸","en":"There are three built-in size: small、default、large.","default":"\\\"default\\\"","version":""},"required":false,"type":"\\\"small\\\" | \\\"large\\\" | \\\"default\\\""},{"name":"prefix","tag":{"cn":"前缀","en":"prefix","default":"","version":""},"required":false,"type":"ReactNode"},{"name":"width","tag":{"cn":"宽度","en":"width","default":"","version":""},"required":false,"type":"string | number "},{"name":"className","tag":{"cn":"自定义类名","en":"Custom class name","default":"","version":""},"required":false,"type":"string "},{"name":"style","tag":{"cn":"自定义样式","en":"Custom style","default":"","version":""},"required":false,"type":"CSSProperties "},{"name":"clearIcon","tag":{"cn":"自定义清除图标","en":"Custom clear icon","default":"","version":""},"required":false,"type":"ReactNode"},{"name":"suffix","tag":{"cn":"后缀","en":"suffix","default":"","version":""},"required":false,"type":"ReactNode"},{"name":"underline","tag":{"cn":"仅仅展示下边框","en":"Show border bottom","default":"false","version":""},"required":false,"type":"boolean "},{"name":"border","tag":{"cn":"是否展示边框","en":"Whether to display border","default":"true","version":""},"required":false,"type":"boolean "},{"name":"onEnterPress","tag":{"cn":"回车键回调函数","en":"The callback function for enter key","default":"","version":""},"required":false,"type":"((value: string, e: KeyboardEvent<Element>) => void) "},{"name":"trim","tag":{"cn":"是否去除前后空格","en":"Whether to remove leading and trailing spaces","default":"","version":""},"required":false,"type":"boolean "},{"name":"numType","tag":{"cn":"设置数字类型 支持 \\\"positive\\\" 和 \\\"non-negative\\\", 仅在 type = number 下生效","en":"Number type supports \\\"positive\\\" and \\\"non-negative\\\", only works when type = number","default":"","version":""},"required":false,"type":"\\\"non-negative\\\" | \\\"positive\\\" "},{"name":"coin","tag":{"cn":"以千位分隔符展示,仅当 type 为 number 时有效","en":"Show as thousands separator, valid only when type is \\\"number\\\"","default":"false","version":""},"required":false,"type":"boolean "},{"name":"integerLimit","tag":{"cn":"整数位数限制, 仅在 type = number 下生效","en":"Integer limit, only works when type = number","default":"","version":""},"required":false,"type":"number "},{"name":"digits","tag":{"cn":"小数位数限制, 仅在 type = number 下生效","en":"Decimal limit, only works when type = number","default":"","version":""},"required":false,"type":"number "},{"name":"autoFix","tag":{"cn":"是否自动补全小数位数, 仅在 type = number 下生效","en":"Whether to automatically complete the number of decimal places, only works when type = number","default":"","version":""},"required":false,"type":"boolean "},{"name":"forwardRef","tag":{"cn":"获取input dom元素","en":"get input dom element","default":"","version":""},"required":false,"type":"Ref<HTMLInputElement> "},{"name":"htmlName","tag":{"cn":"原生 html 属性","en":"The original property of html","default":"","version":""},"required":false,"type":"string "},{"name":"beforeChange","tag":{"cn":"值改变前的回调，当返回值不为空时将作为组件的新值","en":"The callback before the value is changed, when the return value is not empty, it will be used as the new value of the component","default":"","version":""},"required":false,"type":"((value: V) => void | V) "},{"name":"clearToUndefined","tag":{"cn":"点击清除按钮后数据变为 undefined","en":"After clicking the clear button, the data becomes undefined","default":"false","version":""},"required":false,"type":"boolean "},{"name":"info","tag":{"cn":"提示信息","en":"Infomation","default":"","version":""},"required":false,"type":"number | ((value: string | undefined) => string)"},{"name":"delay","tag":{"cn":"用户输入触发 onChange 和校验间隔时间，单位 毫秒","en":"User input triggers the onChange and to check interval, unit: ms","default":"","version":""},"required":false,"type":"number "},{"name":"popover","tag":{"cn":"校验信息弹出位置","en":"The position where the validation info pop up","default":"","version":""},"required":false,"type":"PopoverProps[\\\"position\\\"]"},{"name":"popoverProps","tag":{"cn":"校验或者tip弹框接受的属性","en":"Vilidate popup properties","default":"","version":""},"required":false,"type":"PopoverProps "},{"name":"collpase","tag":{"cn":"是否折叠","en":"Whether to collapse","default":"","version":""},"required":false,"type":"boolean "},{"name":"theme","tag":{"cn":"主题","en":"Theme","default":"","version":""},"required":false,"type":"\\\"dark\\\" | \\\"light\\\" "},{"name":"onSearchClick","tag":{"cn":"点击事件","en":"Click event","default":"","version":""},"required":false,"type":"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) "}],"cn":"","en":"","sort":"0"}]');
export default api;
