const api = JSON.parse('[{"title":"Tag","properties":[{"name":"style","tag":{"cn":"自定义样式","en":"Custom style","default":"","version":""},"required":false,"type":"CSSProperties "},{"name":"className","tag":{"cn":"自定义类名","en":"Custom class name","default":"","version":""},"required":false,"type":"string "},{"name":"size","tag":{"cn":"不同尺寸","en":"There are three built-in size: small、default、large.","default":"\\\"default\\\"","version":""},"required":false,"type":"\\\"small\\\" | \\\"large\\\" | \\\"default\\\""},{"name":"mode","tag":{"cn":"标签样式","en":"Tag style","default":"\\\"bright\\\"","version":""},"required":false,"type":"\\\"bright\\\" | \\\"outline\\\" | \\\"fill\\\" | \\\"brightOutline\\\" "},{"name":"disabled","tag":{"cn":"是否禁用","en":"Is disabled","default":"false","version":""},"required":false,"type":"boolean "},{"name":"color","tag":{"cn":"标签颜色,代替原有type属性，支持更多色系","en":"Tag color, replace the original type attribute, support more color system","default":"\\\"default\\\"","version":""},"required":false,"type":"| \\\"default\\\"  | \\\"info\\\"  | \\\"success\\\"  | \\\"warning\\\"  | \\\"danger\\\"  | \\\"orange\\\"  | \\\"purple\\\"  | \\\"cyan\\\"  | \\\"magenta\\\"  | \\\"indigo\\\"  | \\\"tangerine\\\"  | \\\"neon\\\" "},{"name":"shape","tag":{"cn":"标签形状","en":"Tag shape","default":"\\\"default\\\"","version":""},"required":false,"type":"\\\"rounded\\\" "},{"name":"backgroundColor","tag":{"cn":"背景色,可以自行的设置标签的背景色","en":"Background color,can set the tag\\\"s background color by it","default":"","version":""},"required":false,"type":"string "},{"name":"children","tag":{"cn":"内容，文字或react组件","en":"Tag content, text or react component","default":"","version":""},"required":false,"type":"ReactNode"},{"name":"onCompleted","tag":{"cn":"Tag 编辑完成时触发该事件（children 必须为 string）","en":"This event is triggered when Tag editing is completed (children must be string)","default":"","version":""},"required":false,"type":"((value: string) => void) "},{"name":"onClick","tag":{"cn":"点击 tag 事件","en":"The click callback","default":"","version":""},"required":false,"type":"((e: MouseEvent<HTMLDivElement, MouseEvent>) => void) "},{"name":"onClose","tag":{"cn":"当 onClose 为空时，不显示关闭。如果需要关闭又不需要处理回调，设置为 true 即可","en":"When onClose is empty, no close is displayed. If you need to close and do not need to handle callbacks, set it true","default":"","version":""},"required":false,"type":"boolean | ((e: MouseEvent<HTMLDivElement, MouseEvent>) => void | Promise<any>) "},{"name":"onKeyUp","tag":{"cn":"可编辑输入框 keyUp 事件","en":"Editable input box keyUp event","default":"","version":""},"required":false,"type":"((e: KeyboardEvent<HTMLInputElement>) => void) "},{"name":"onEnterPress","tag":{"cn":"可编辑输入框回车事件","en":"Editable input box enter event","default":"","version":""},"required":false,"type":"((value: string, e: KeyboardEvent<HTMLInputElement>) => void) "}],"cn":"","en":"","sort":"0"},{"title":"Tag.Input","properties":[{"name":"style","tag":{"cn":"自定义样式","en":"Custom style","default":"","version":""},"required":false,"type":"CSSProperties "},{"name":"className","tag":{"cn":"自定义类名","en":"Custom class name","default":"","version":""},"required":false,"type":"string "},{"name":"size","tag":{"cn":"不同尺寸","en":"There are three built-in size: small、default、large.","default":"\\\"default\\\"","version":""},"required":false,"type":"\\\"small\\\" | \\\"large\\\" | \\\"default\\\""},{"name":"onKeyUp","tag":{"cn":"KeyUp 事件回调","en":"KeyUp event callback","default":"","version":""},"required":false,"type":"((e: KeyboardEvent<HTMLInputElement>) => void) "},{"name":"onEnterPress","tag":{"cn":"EnterPress 事件回调","en":"EnterPress change callback","default":"","version":""},"required":false,"type":"((value: string, e: KeyboardEvent<HTMLInputElement>) => void) "},{"name":"onFocus","tag":{"cn":"Focus 事件回调","en":"Focus event callback","default":"","version":""},"required":false,"type":"((e: FocusEvent<HTMLInputElement, Element>) => void) "},{"name":"onBlur","tag":{"cn":"Blur 事件回调","en":"Blur event callback","default":"","version":""},"required":false,"type":"((value: string, e: FocusEvent<HTMLInputElement, Element>) => void) "},{"name":"onChange","tag":{"cn":"Value 改变回调","en":"Value change callback","default":"","version":""},"required":false,"type":"((value?: string ) => void) "},{"name":"value","tag":{"cn":"受控","en":"In control","default":"","version":""},"required":false,"type":"string "}],"cn":"","en":"","sort":"0"}]');
export default api;
